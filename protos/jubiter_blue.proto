syntax = "proto3";

option java_package = "com.jubiter.plugin.protos";
option java_outer_classname = "JuBiterBlueProtos";
option objc_class_prefix = "JuBiterBlueProtos";


// Wrapper message for `int32`.
//
// Allows for nullability of fields in messages
message Int32Value {
    // The int32 value.
    int32 value = 1;
}

message BluetoothState {
    enum State {
        UNKNOWN = 0;
        UNAVAILABLE = 1;
        UNAUTHORIZED = 2;
        TURNING_ON = 3;
        ON = 4;
        TURNING_OFF = 5;
        OFF = 6;
    };
    State state = 1;
}

message BluetoothAdvertisementData {
    string local_name = 1;
    Int32Value tx_power_level = 2;
    bool connectable = 3;
    map<int32, bytes> manufacturer_data = 4; // Map of manufacturers to their data
    map<string, bytes> service_data = 5;  // Map of service UUIDs to their data.
    repeated string service_uuids = 6;
}

message ScanSettings {
    int32 android_scan_mode = 1;
    repeated string service_uuids = 2;
}

message BluetoothScanResult {
    BluetoothDevice device = 1; // The received peer's ID.
    BluetoothAdvertisementData advertisement_data = 2; // unused
    int32 rssi = 3; // unused
}

message BluetoothConnectRequest {
    string remote_name = 1;
    string remote_id = 2;  // mac or uuid
    int32 timeout = 3;
    bool android_auto_connect = 4;  // unused
}

message BluetoothDevice {
    enum Type {
        UNKNOWN = 0;
        CLASSIC = 1;
        LE = 2;
        DUAL = 3;
    };

    string remote_id = 1;  // mac or uuid
    string name = 2;
    Type type = 3;
}

message BluetoothDeviceStateResponse {
    enum BluetoothDeviceState {
        DISCONNECTED = 0;
        CONNECTING = 1;
        CONNECTED = 2;
        DISCONNECTING = 3;
    }
    string remote_id = 1;
    BluetoothDeviceState state = 2;
    int32 deviceID = 3;
}

message BluetoothConnectedResponse {
    repeated BluetoothDevice devices = 1;
}


enum FpIdVerifyMode {
    FP_ID_VERIFY_MODE_UNSPECIFIED = 0x00;
    FP_ID_VERIFY_MODE_DEVICE = 0x01;  // reserved
    FP_ID_VERIFY_MODE_9GRIDS = 0x02;
    FP_ID_VERIFY_MODE_APDU   = 0x03;  // reserved
    FP_ID_VERIFY_MODE_FPGT   = 0x04;  // reserved
}

message EnrollFpState {
    int32 modality_id = 1;
    int32 next_index = 2;
    int32 remaining_times = 3;
}
