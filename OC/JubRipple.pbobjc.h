// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Jub_Ripple.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class RippleProtosPymtAmount;
@class RippleProtosPymtXRP;
@class RippleProtosXrpMemo;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum RippleProtosENUM_XRP_TX_TYPE

typedef GPB_ENUM(RippleProtosENUM_XRP_TX_TYPE) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RippleProtosENUM_XRP_TX_TYPE_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RippleProtosENUM_XRP_TX_TYPE_Pymt = 0,
};

GPBEnumDescriptor *RippleProtosENUM_XRP_TX_TYPE_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RippleProtosENUM_XRP_TX_TYPE_IsValidValue(int32_t value);

#pragma mark - Enum RippleProtosENUM_XRP_PYMT_TYPE

typedef GPB_ENUM(RippleProtosENUM_XRP_PYMT_TYPE) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RippleProtosENUM_XRP_PYMT_TYPE_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Direct XRP payments */
  RippleProtosENUM_XRP_PYMT_TYPE_Dxrp = 0,

  /** Cross-currency payments(foreign exchange) */
  RippleProtosENUM_XRP_PYMT_TYPE_Fx = 1,

  /** Checks */
  RippleProtosENUM_XRP_PYMT_TYPE_Checks = 2,

  /** Escrow */
  RippleProtosENUM_XRP_PYMT_TYPE_Escrow = 3,

  /** Partial Payments */
  RippleProtosENUM_XRP_PYMT_TYPE_Prtl = 4,

  /** Payment Channels */
  RippleProtosENUM_XRP_PYMT_TYPE_Chan = 5,
};

GPBEnumDescriptor *RippleProtosENUM_XRP_PYMT_TYPE_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RippleProtosENUM_XRP_PYMT_TYPE_IsValidValue(int32_t value);

#pragma mark - RippleProtosJubRippleRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface RippleProtosJubRippleRoot : GPBRootObject
@end

#pragma mark - RippleProtosPymtAmount

typedef GPB_ENUM(RippleProtosPymtAmount_FieldNumber) {
  RippleProtosPymtAmount_FieldNumber_Currency = 1,
  RippleProtosPymtAmount_FieldNumber_Value = 2,
  RippleProtosPymtAmount_FieldNumber_Issuer = 3,
};

@interface RippleProtosPymtAmount : GPBMessage

/** [Optional] */
@property(nonatomic, readwrite, copy, null_resettable) NSString *currency;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

/** [Optional] */
@property(nonatomic, readwrite, copy, null_resettable) NSString *issuer;

@end

#pragma mark - RippleProtosXrpMemo

typedef GPB_ENUM(RippleProtosXrpMemo_FieldNumber) {
  RippleProtosXrpMemo_FieldNumber_Type = 1,
  RippleProtosXrpMemo_FieldNumber_Data_p = 2,
  RippleProtosXrpMemo_FieldNumber_Format = 3,
};

@interface RippleProtosXrpMemo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *type;

@property(nonatomic, readwrite, copy, null_resettable) NSString *data_p;

/** [Optional] */
@property(nonatomic, readwrite, copy, null_resettable) NSString *format;

@end

#pragma mark - RippleProtosPymtXRP

typedef GPB_ENUM(RippleProtosPymtXRP_FieldNumber) {
  RippleProtosPymtXRP_FieldNumber_Type = 1,
  RippleProtosPymtXRP_FieldNumber_Amount = 2,
  RippleProtosPymtXRP_FieldNumber_Destination = 3,
  RippleProtosPymtXRP_FieldNumber_DestinationTag = 4,
  RippleProtosPymtXRP_FieldNumber_InvoiceId = 5,
  RippleProtosPymtXRP_FieldNumber_SendMax = 6,
  RippleProtosPymtXRP_FieldNumber_DeliverMin = 7,
};

@interface RippleProtosPymtXRP : GPBMessage

@property(nonatomic, readwrite) RippleProtosENUM_XRP_PYMT_TYPE type;

@property(nonatomic, readwrite, strong, null_resettable) RippleProtosPymtAmount *amount;
/** Test to see if @c amount has been set. */
@property(nonatomic, readwrite) BOOL hasAmount;

@property(nonatomic, readwrite, copy, null_resettable) NSString *destination;

@property(nonatomic, readwrite, copy, null_resettable) NSString *destinationTag;

/** [Optional] */
@property(nonatomic, readwrite, copy, null_resettable) NSString *invoiceId;

/** [Optional] */
@property(nonatomic, readwrite, strong, null_resettable) RippleProtosPymtAmount *sendMax;
/** Test to see if @c sendMax has been set. */
@property(nonatomic, readwrite) BOOL hasSendMax;

/** [Optional] */
@property(nonatomic, readwrite, strong, null_resettable) RippleProtosPymtAmount *deliverMin;
/** Test to see if @c deliverMin has been set. */
@property(nonatomic, readwrite) BOOL hasDeliverMin;

@end

/**
 * Fetches the raw value of a @c RippleProtosPymtXRP's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RippleProtosPymtXRP_Type_RawValue(RippleProtosPymtXRP *message);
/**
 * Sets the raw value of an @c RippleProtosPymtXRP's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRippleProtosPymtXRP_Type_RawValue(RippleProtosPymtXRP *message, int32_t value);

#pragma mark - RippleProtosTransactionXRP

typedef GPB_ENUM(RippleProtosTransactionXRP_FieldNumber) {
  RippleProtosTransactionXRP_FieldNumber_Account = 1,
  RippleProtosTransactionXRP_FieldNumber_Type = 2,
  RippleProtosTransactionXRP_FieldNumber_Fee = 3,
  RippleProtosTransactionXRP_FieldNumber_Sequence = 4,
  RippleProtosTransactionXRP_FieldNumber_AccountTxnId = 5,
  RippleProtosTransactionXRP_FieldNumber_Flags = 6,
  RippleProtosTransactionXRP_FieldNumber_LastLedgerSequence = 7,
  RippleProtosTransactionXRP_FieldNumber_Memo = 8,
  RippleProtosTransactionXRP_FieldNumber_SourceTag = 9,
  RippleProtosTransactionXRP_FieldNumber_Pymt = 10,
};

typedef GPB_ENUM(RippleProtosTransactionXRP_Action_OneOfCase) {
  RippleProtosTransactionXRP_Action_OneOfCase_GPBUnsetOneOfCase = 0,
  RippleProtosTransactionXRP_Action_OneOfCase_Pymt = 10,
};

@interface RippleProtosTransactionXRP : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *account;

@property(nonatomic, readwrite) RippleProtosENUM_XRP_TX_TYPE type;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fee;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sequence;

/** [Optional] */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountTxnId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *flags;

@property(nonatomic, readwrite, copy, null_resettable) NSString *lastLedgerSequence;

/** [Optional] */
@property(nonatomic, readwrite, strong, null_resettable) RippleProtosXrpMemo *memo;
/** Test to see if @c memo has been set. */
@property(nonatomic, readwrite) BOOL hasMemo;

/** [Optional] */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sourceTag;

@property(nonatomic, readonly) RippleProtosTransactionXRP_Action_OneOfCase actionOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) RippleProtosPymtXRP *pymt;

@end

/**
 * Fetches the raw value of a @c RippleProtosTransactionXRP's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RippleProtosTransactionXRP_Type_RawValue(RippleProtosTransactionXRP *message);
/**
 * Sets the raw value of an @c RippleProtosTransactionXRP's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRippleProtosTransactionXRP_Type_RawValue(RippleProtosTransactionXRP *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'action'.
 **/
void RippleProtosTransactionXRP_ClearActionOneOfCase(RippleProtosTransactionXRP *message);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
