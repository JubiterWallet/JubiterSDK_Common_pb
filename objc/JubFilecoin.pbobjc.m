// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Jub_Filecoin.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "JubFilecoin.pbobjc.h"
#import "JubCommon.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - FilecoinProtosJubFilecoinRoot

@implementation FilecoinProtosJubFilecoinRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - FilecoinProtosJubFilecoinRoot_FileDescriptor

static GPBFileDescriptor *FilecoinProtosJubFilecoinRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"JUB.Proto.Filecoin"
                                                 objcPrefix:@"FilecoinProtos"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - FilecoinProtosContextCfgFIL

@implementation FilecoinProtosContextCfgFIL

@dynamic mainPath;

typedef struct FilecoinProtosContextCfgFIL__storage_ {
  uint32_t _has_storage_[1];
  NSString *mainPath;
} FilecoinProtosContextCfgFIL__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "mainPath",
        .dataTypeSpecific.className = NULL,
        .number = FilecoinProtosContextCfgFIL_FieldNumber_MainPath,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(FilecoinProtosContextCfgFIL__storage_, mainPath),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[FilecoinProtosContextCfgFIL class]
                                     rootClass:[FilecoinProtosJubFilecoinRoot class]
                                          file:FilecoinProtosJubFilecoinRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(FilecoinProtosContextCfgFIL__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - FilecoinProtosTransactionFIL

@implementation FilecoinProtosTransactionFIL

@dynamic hasPath, path;
@dynamic nonce;
@dynamic gasLimit;
@dynamic gasFeeCapInAtto;
@dynamic gasPremiumInAtto;
@dynamic to;
@dynamic valueInAtto;
@dynamic input;

typedef struct FilecoinProtosTransactionFIL__storage_ {
  uint32_t _has_storage_[1];
  uint32_t nonce;
  uint32_t gasLimit;
  CommonProtosBip44Path *path;
  NSString *gasFeeCapInAtto;
  NSString *gasPremiumInAtto;
  NSString *to;
  NSString *valueInAtto;
  NSString *input;
} FilecoinProtosTransactionFIL__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "path",
        .dataTypeSpecific.className = GPBStringifySymbol(CommonProtosBip44Path),
        .number = FilecoinProtosTransactionFIL_FieldNumber_Path,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(FilecoinProtosTransactionFIL__storage_, path),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "nonce",
        .dataTypeSpecific.className = NULL,
        .number = FilecoinProtosTransactionFIL_FieldNumber_Nonce,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(FilecoinProtosTransactionFIL__storage_, nonce),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "gasLimit",
        .dataTypeSpecific.className = NULL,
        .number = FilecoinProtosTransactionFIL_FieldNumber_GasLimit,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(FilecoinProtosTransactionFIL__storage_, gasLimit),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "gasFeeCapInAtto",
        .dataTypeSpecific.className = NULL,
        .number = FilecoinProtosTransactionFIL_FieldNumber_GasFeeCapInAtto,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(FilecoinProtosTransactionFIL__storage_, gasFeeCapInAtto),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "gasPremiumInAtto",
        .dataTypeSpecific.className = NULL,
        .number = FilecoinProtosTransactionFIL_FieldNumber_GasPremiumInAtto,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(FilecoinProtosTransactionFIL__storage_, gasPremiumInAtto),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "to",
        .dataTypeSpecific.className = NULL,
        .number = FilecoinProtosTransactionFIL_FieldNumber_To,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(FilecoinProtosTransactionFIL__storage_, to),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "valueInAtto",
        .dataTypeSpecific.className = NULL,
        .number = FilecoinProtosTransactionFIL_FieldNumber_ValueInAtto,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(FilecoinProtosTransactionFIL__storage_, valueInAtto),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "input",
        .dataTypeSpecific.className = NULL,
        .number = FilecoinProtosTransactionFIL_FieldNumber_Input,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(FilecoinProtosTransactionFIL__storage_, input),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[FilecoinProtosTransactionFIL class]
                                     rootClass:[FilecoinProtosJubFilecoinRoot class]
                                          file:FilecoinProtosJubFilecoinRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(FilecoinProtosTransactionFIL__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
