// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/contract/smart_contract.proto

#include "core/contract/smart_contract.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_core_2fcontract_2fsmart_5fcontract_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SmartContract_core_2fcontract_2fsmart_5fcontract_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_core_2fcontract_2fsmart_5fcontract_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SmartContract_ABI_core_2fcontract_2fsmart_5fcontract_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_core_2fcontract_2fsmart_5fcontract_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SmartContract_ABI_Entry_core_2fcontract_2fsmart_5fcontract_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_core_2fcontract_2fsmart_5fcontract_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SmartContract_ABI_Entry_Param_core_2fcontract_2fsmart_5fcontract_2eproto;
namespace protocol {
class SmartContract_ABI_Entry_ParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SmartContract_ABI_Entry_Param> _instance;
} _SmartContract_ABI_Entry_Param_default_instance_;
class SmartContract_ABI_EntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SmartContract_ABI_Entry> _instance;
} _SmartContract_ABI_Entry_default_instance_;
class SmartContract_ABIDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SmartContract_ABI> _instance;
} _SmartContract_ABI_default_instance_;
class SmartContractDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SmartContract> _instance;
} _SmartContract_default_instance_;
class CreateSmartContractDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateSmartContract> _instance;
} _CreateSmartContract_default_instance_;
class TriggerSmartContractDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TriggerSmartContract> _instance;
} _TriggerSmartContract_default_instance_;
class ClearABIContractDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearABIContract> _instance;
} _ClearABIContract_default_instance_;
class UpdateSettingContractDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateSettingContract> _instance;
} _UpdateSettingContract_default_instance_;
class UpdateEnergyLimitContractDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateEnergyLimitContract> _instance;
} _UpdateEnergyLimitContract_default_instance_;
}  // namespace protocol
static void InitDefaultsscc_info_ClearABIContract_core_2fcontract_2fsmart_5fcontract_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_ClearABIContract_default_instance_;
    new (ptr) ::protocol::ClearABIContract();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::ClearABIContract::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClearABIContract_core_2fcontract_2fsmart_5fcontract_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ClearABIContract_core_2fcontract_2fsmart_5fcontract_2eproto}, {}};

static void InitDefaultsscc_info_CreateSmartContract_core_2fcontract_2fsmart_5fcontract_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_CreateSmartContract_default_instance_;
    new (ptr) ::protocol::CreateSmartContract();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::CreateSmartContract::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateSmartContract_core_2fcontract_2fsmart_5fcontract_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_CreateSmartContract_core_2fcontract_2fsmart_5fcontract_2eproto}, {
      &scc_info_SmartContract_core_2fcontract_2fsmart_5fcontract_2eproto.base,}};

static void InitDefaultsscc_info_SmartContract_core_2fcontract_2fsmart_5fcontract_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_SmartContract_default_instance_;
    new (ptr) ::protocol::SmartContract();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::SmartContract::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SmartContract_core_2fcontract_2fsmart_5fcontract_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SmartContract_core_2fcontract_2fsmart_5fcontract_2eproto}, {
      &scc_info_SmartContract_ABI_core_2fcontract_2fsmart_5fcontract_2eproto.base,}};

static void InitDefaultsscc_info_SmartContract_ABI_core_2fcontract_2fsmart_5fcontract_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_SmartContract_ABI_default_instance_;
    new (ptr) ::protocol::SmartContract_ABI();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::SmartContract_ABI::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SmartContract_ABI_core_2fcontract_2fsmart_5fcontract_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SmartContract_ABI_core_2fcontract_2fsmart_5fcontract_2eproto}, {
      &scc_info_SmartContract_ABI_Entry_core_2fcontract_2fsmart_5fcontract_2eproto.base,}};

static void InitDefaultsscc_info_SmartContract_ABI_Entry_core_2fcontract_2fsmart_5fcontract_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_SmartContract_ABI_Entry_default_instance_;
    new (ptr) ::protocol::SmartContract_ABI_Entry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::SmartContract_ABI_Entry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SmartContract_ABI_Entry_core_2fcontract_2fsmart_5fcontract_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SmartContract_ABI_Entry_core_2fcontract_2fsmart_5fcontract_2eproto}, {
      &scc_info_SmartContract_ABI_Entry_Param_core_2fcontract_2fsmart_5fcontract_2eproto.base,}};

static void InitDefaultsscc_info_SmartContract_ABI_Entry_Param_core_2fcontract_2fsmart_5fcontract_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_SmartContract_ABI_Entry_Param_default_instance_;
    new (ptr) ::protocol::SmartContract_ABI_Entry_Param();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::SmartContract_ABI_Entry_Param::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SmartContract_ABI_Entry_Param_core_2fcontract_2fsmart_5fcontract_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SmartContract_ABI_Entry_Param_core_2fcontract_2fsmart_5fcontract_2eproto}, {}};

static void InitDefaultsscc_info_TriggerSmartContract_core_2fcontract_2fsmart_5fcontract_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_TriggerSmartContract_default_instance_;
    new (ptr) ::protocol::TriggerSmartContract();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::TriggerSmartContract::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TriggerSmartContract_core_2fcontract_2fsmart_5fcontract_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_TriggerSmartContract_core_2fcontract_2fsmart_5fcontract_2eproto}, {}};

static void InitDefaultsscc_info_UpdateEnergyLimitContract_core_2fcontract_2fsmart_5fcontract_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_UpdateEnergyLimitContract_default_instance_;
    new (ptr) ::protocol::UpdateEnergyLimitContract();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::UpdateEnergyLimitContract::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateEnergyLimitContract_core_2fcontract_2fsmart_5fcontract_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_UpdateEnergyLimitContract_core_2fcontract_2fsmart_5fcontract_2eproto}, {}};

static void InitDefaultsscc_info_UpdateSettingContract_core_2fcontract_2fsmart_5fcontract_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_UpdateSettingContract_default_instance_;
    new (ptr) ::protocol::UpdateSettingContract();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::UpdateSettingContract::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateSettingContract_core_2fcontract_2fsmart_5fcontract_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_UpdateSettingContract_core_2fcontract_2fsmart_5fcontract_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto[9];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_core_2fcontract_2fsmart_5fcontract_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_core_2fcontract_2fsmart_5fcontract_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_core_2fcontract_2fsmart_5fcontract_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry_Param, indexed_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry_Param, name_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry_Param, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, anonymous_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, constant_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, name_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, inputs_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, outputs_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, type_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, payable_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI_Entry, statemutability_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract_ABI, entrys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, origin_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, contract_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, abi_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, bytecode_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, call_value_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, consume_user_resource_percent_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, name_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, origin_energy_limit_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, code_hash_),
  PROTOBUF_FIELD_OFFSET(::protocol::SmartContract, trx_hash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::CreateSmartContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::CreateSmartContract, owner_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::CreateSmartContract, new_contract_),
  PROTOBUF_FIELD_OFFSET(::protocol::CreateSmartContract, call_token_value_),
  PROTOBUF_FIELD_OFFSET(::protocol::CreateSmartContract, token_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, owner_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, contract_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, call_value_),
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, data_),
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, call_token_value_),
  PROTOBUF_FIELD_OFFSET(::protocol::TriggerSmartContract, token_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::ClearABIContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::ClearABIContract, owner_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::ClearABIContract, contract_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateSettingContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateSettingContract, owner_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateSettingContract, contract_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateSettingContract, consume_user_resource_percent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateEnergyLimitContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateEnergyLimitContract, owner_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateEnergyLimitContract, contract_address_),
  PROTOBUF_FIELD_OFFSET(::protocol::UpdateEnergyLimitContract, origin_energy_limit_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protocol::SmartContract_ABI_Entry_Param)},
  { 8, -1, sizeof(::protocol::SmartContract_ABI_Entry)},
  { 21, -1, sizeof(::protocol::SmartContract_ABI)},
  { 27, -1, sizeof(::protocol::SmartContract)},
  { 42, -1, sizeof(::protocol::CreateSmartContract)},
  { 51, -1, sizeof(::protocol::TriggerSmartContract)},
  { 62, -1, sizeof(::protocol::ClearABIContract)},
  { 69, -1, sizeof(::protocol::UpdateSettingContract)},
  { 77, -1, sizeof(::protocol::UpdateEnergyLimitContract)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_SmartContract_ABI_Entry_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_SmartContract_ABI_Entry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_SmartContract_ABI_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_SmartContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_CreateSmartContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_TriggerSmartContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_ClearABIContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_UpdateSettingContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::_UpdateEnergyLimitContract_default_instance_),
};

const char descriptor_table_protodef_core_2fcontract_2fsmart_5fcontract_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"core/contract/smart_contract.proto\022\010pr"
  "otocol\032\017core/Tron.proto\"\203\007\n\rSmartContrac"
  "t\022\026\n\016origin_address\030\001 \001(\014\022\030\n\020contract_ad"
  "dress\030\002 \001(\014\022(\n\003abi\030\003 \001(\0132\033.protocol.Smar"
  "tContract.ABI\022\020\n\010bytecode\030\004 \001(\014\022\022\n\ncall_"
  "value\030\005 \001(\003\022%\n\035consume_user_resource_per"
  "cent\030\006 \001(\003\022\014\n\004name\030\007 \001(\t\022\033\n\023origin_energ"
  "y_limit\030\010 \001(\003\022\021\n\tcode_hash\030\t \001(\014\022\020\n\010trx_"
  "hash\030\n \001(\014\032\370\004\n\003ABI\0221\n\006entrys\030\001 \003(\0132!.pro"
  "tocol.SmartContract.ABI.Entry\032\275\004\n\005Entry\022"
  "\021\n\tanonymous\030\001 \001(\010\022\020\n\010constant\030\002 \001(\010\022\014\n\004"
  "name\030\003 \001(\t\0227\n\006inputs\030\004 \003(\0132\'.protocol.Sm"
  "artContract.ABI.Entry.Param\0228\n\007outputs\030\005"
  " \003(\0132\'.protocol.SmartContract.ABI.Entry."
  "Param\0229\n\004type\030\006 \001(\0162+.protocol.SmartCont"
  "ract.ABI.Entry.EntryType\022\017\n\007payable\030\007 \001("
  "\010\022N\n\017stateMutability\030\010 \001(\01625.protocol.Sm"
  "artContract.ABI.Entry.StateMutabilityTyp"
  "e\0324\n\005Param\022\017\n\007indexed\030\001 \001(\010\022\014\n\004name\030\002 \001("
  "\t\022\014\n\004type\030\003 \001(\t\"Y\n\tEntryType\022\024\n\020UnknownE"
  "ntryType\020\000\022\017\n\013Constructor\020\001\022\014\n\010Function\020"
  "\002\022\t\n\005Event\020\003\022\014\n\010Fallback\020\004\"a\n\023StateMutab"
  "ilityType\022\031\n\025UnknownMutabilityType\020\000\022\010\n\004"
  "Pure\020\001\022\010\n\004View\020\002\022\016\n\nNonpayable\020\003\022\013\n\007Paya"
  "ble\020\004\"\207\001\n\023CreateSmartContract\022\025\n\rowner_a"
  "ddress\030\001 \001(\014\022-\n\014new_contract\030\002 \001(\0132\027.pro"
  "tocol.SmartContract\022\030\n\020call_token_value\030"
  "\003 \001(\003\022\020\n\010token_id\030\004 \001(\003\"\225\001\n\024TriggerSmart"
  "Contract\022\025\n\rowner_address\030\001 \001(\014\022\030\n\020contr"
  "act_address\030\002 \001(\014\022\022\n\ncall_value\030\003 \001(\003\022\014\n"
  "\004data\030\004 \001(\014\022\030\n\020call_token_value\030\005 \001(\003\022\020\n"
  "\010token_id\030\006 \001(\003\"C\n\020ClearABIContract\022\025\n\ro"
  "wner_address\030\001 \001(\014\022\030\n\020contract_address\030\002"
  " \001(\014\"o\n\025UpdateSettingContract\022\025\n\rowner_a"
  "ddress\030\001 \001(\014\022\030\n\020contract_address\030\002 \001(\014\022%"
  "\n\035consume_user_resource_percent\030\003 \001(\003\"i\n"
  "\031UpdateEnergyLimitContract\022\025\n\rowner_addr"
  "ess\030\001 \001(\014\022\030\n\020contract_address\030\002 \001(\014\022\033\n\023o"
  "rigin_energy_limit\030\003 \001(\003BE\n\030org.tron.pro"
  "tos.contractZ)github.com/tronprotocol/gr"
  "pc-gateway/coreb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_deps[1] = {
  &::descriptor_table_core_2fTron_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_sccs[9] = {
  &scc_info_ClearABIContract_core_2fcontract_2fsmart_5fcontract_2eproto.base,
  &scc_info_CreateSmartContract_core_2fcontract_2fsmart_5fcontract_2eproto.base,
  &scc_info_SmartContract_core_2fcontract_2fsmart_5fcontract_2eproto.base,
  &scc_info_SmartContract_ABI_core_2fcontract_2fsmart_5fcontract_2eproto.base,
  &scc_info_SmartContract_ABI_Entry_core_2fcontract_2fsmart_5fcontract_2eproto.base,
  &scc_info_SmartContract_ABI_Entry_Param_core_2fcontract_2fsmart_5fcontract_2eproto.base,
  &scc_info_TriggerSmartContract_core_2fcontract_2fsmart_5fcontract_2eproto.base,
  &scc_info_UpdateEnergyLimitContract_core_2fcontract_2fsmart_5fcontract_2eproto.base,
  &scc_info_UpdateSettingContract_core_2fcontract_2fsmart_5fcontract_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once;
static bool descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto = {
  &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_initialized, descriptor_table_protodef_core_2fcontract_2fsmart_5fcontract_2eproto, "core/contract/smart_contract.proto", 1623,
  &descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_once, descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_sccs, descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto_deps, 9, 1,
  schemas, file_default_instances, TableStruct_core_2fcontract_2fsmart_5fcontract_2eproto::offsets,
  file_level_metadata_core_2fcontract_2fsmart_5fcontract_2eproto, 9, file_level_enum_descriptors_core_2fcontract_2fsmart_5fcontract_2eproto, file_level_service_descriptors_core_2fcontract_2fsmart_5fcontract_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_core_2fcontract_2fsmart_5fcontract_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto), true);
namespace protocol {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SmartContract_ABI_Entry_EntryType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto);
  return file_level_enum_descriptors_core_2fcontract_2fsmart_5fcontract_2eproto[0];
}
bool SmartContract_ABI_Entry_EntryType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::UnknownEntryType;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::Constructor;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::Function;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::Event;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::Fallback;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::EntryType_MIN;
constexpr SmartContract_ABI_Entry_EntryType SmartContract_ABI_Entry::EntryType_MAX;
constexpr int SmartContract_ABI_Entry::EntryType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SmartContract_ABI_Entry_StateMutabilityType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_core_2fcontract_2fsmart_5fcontract_2eproto);
  return file_level_enum_descriptors_core_2fcontract_2fsmart_5fcontract_2eproto[1];
}
bool SmartContract_ABI_Entry_StateMutabilityType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::UnknownMutabilityType;
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::Pure;
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::View;
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::Nonpayable;
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::Payable;
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::StateMutabilityType_MIN;
constexpr SmartContract_ABI_Entry_StateMutabilityType SmartContract_ABI_Entry::StateMutabilityType_MAX;
constexpr int SmartContract_ABI_Entry::StateMutabilityType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void SmartContract_ABI_Entry_Param::InitAsDefaultInstance() {
}
class SmartContract_ABI_Entry_Param::_Internal {
 public:
};

SmartContract_ABI_Entry_Param::SmartContract_ABI_Entry_Param()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.SmartContract.ABI.Entry.Param)
}
SmartContract_ABI_Entry_Param::SmartContract_ABI_Entry_Param(const SmartContract_ABI_Entry_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.type().empty()) {
    type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  indexed_ = from.indexed_;
  // @@protoc_insertion_point(copy_constructor:protocol.SmartContract.ABI.Entry.Param)
}

void SmartContract_ABI_Entry_Param::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SmartContract_ABI_Entry_Param_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  indexed_ = false;
}

SmartContract_ABI_Entry_Param::~SmartContract_ABI_Entry_Param() {
  // @@protoc_insertion_point(destructor:protocol.SmartContract.ABI.Entry.Param)
  SharedDtor();
}

void SmartContract_ABI_Entry_Param::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SmartContract_ABI_Entry_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SmartContract_ABI_Entry_Param& SmartContract_ABI_Entry_Param::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SmartContract_ABI_Entry_Param_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  return *internal_default_instance();
}


void SmartContract_ABI_Entry_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.SmartContract.ABI.Entry.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  indexed_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SmartContract_ABI_Entry_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool indexed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          indexed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "protocol.SmartContract.ABI.Entry.Param.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_type(), ptr, ctx, "protocol.SmartContract.ABI.Entry.Param.type");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SmartContract_ABI_Entry_Param::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.SmartContract.ABI.Entry.Param)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool indexed = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &indexed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "protocol.SmartContract.ABI.Entry.Param.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "protocol.SmartContract.ABI.Entry.Param.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.SmartContract.ABI.Entry.Param)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.SmartContract.ABI.Entry.Param)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SmartContract_ABI_Entry_Param::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.SmartContract.ABI.Entry.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool indexed = 1;
  if (this->indexed() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->indexed(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.SmartContract.ABI.Entry.Param.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.SmartContract.ABI.Entry.Param.type");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.SmartContract.ABI.Entry.Param)
}

::PROTOBUF_NAMESPACE_ID::uint8* SmartContract_ABI_Entry_Param::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.SmartContract.ABI.Entry.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool indexed = 1;
  if (this->indexed() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->indexed(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.SmartContract.ABI.Entry.Param.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.SmartContract.ABI.Entry.Param.type");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.SmartContract.ABI.Entry.Param)
  return target;
}

size_t SmartContract_ABI_Entry_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.SmartContract.ABI.Entry.Param)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->type());
  }

  // bool indexed = 1;
  if (this->indexed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SmartContract_ABI_Entry_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.SmartContract.ABI.Entry.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const SmartContract_ABI_Entry_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SmartContract_ABI_Entry_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.SmartContract.ABI.Entry.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.SmartContract.ABI.Entry.Param)
    MergeFrom(*source);
  }
}

void SmartContract_ABI_Entry_Param::MergeFrom(const SmartContract_ABI_Entry_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.SmartContract.ABI.Entry.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.indexed() != 0) {
    set_indexed(from.indexed());
  }
}

void SmartContract_ABI_Entry_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.SmartContract.ABI.Entry.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmartContract_ABI_Entry_Param::CopyFrom(const SmartContract_ABI_Entry_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.SmartContract.ABI.Entry.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartContract_ABI_Entry_Param::IsInitialized() const {
  return true;
}

void SmartContract_ABI_Entry_Param::InternalSwap(SmartContract_ABI_Entry_Param* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(indexed_, other->indexed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SmartContract_ABI_Entry_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SmartContract_ABI_Entry::InitAsDefaultInstance() {
}
class SmartContract_ABI_Entry::_Internal {
 public:
};

SmartContract_ABI_Entry::SmartContract_ABI_Entry()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.SmartContract.ABI.Entry)
}
SmartContract_ABI_Entry::SmartContract_ABI_Entry(const SmartContract_ABI_Entry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      inputs_(from.inputs_),
      outputs_(from.outputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&anonymous_, &from.anonymous_,
    static_cast<size_t>(reinterpret_cast<char*>(&statemutability_) -
    reinterpret_cast<char*>(&anonymous_)) + sizeof(statemutability_));
  // @@protoc_insertion_point(copy_constructor:protocol.SmartContract.ABI.Entry)
}

void SmartContract_ABI_Entry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SmartContract_ABI_Entry_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&anonymous_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&statemutability_) -
      reinterpret_cast<char*>(&anonymous_)) + sizeof(statemutability_));
}

SmartContract_ABI_Entry::~SmartContract_ABI_Entry() {
  // @@protoc_insertion_point(destructor:protocol.SmartContract.ABI.Entry)
  SharedDtor();
}

void SmartContract_ABI_Entry::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SmartContract_ABI_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SmartContract_ABI_Entry& SmartContract_ABI_Entry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SmartContract_ABI_Entry_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  return *internal_default_instance();
}


void SmartContract_ABI_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.SmartContract.ABI.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  outputs_.Clear();
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&anonymous_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&statemutability_) -
      reinterpret_cast<char*>(&anonymous_)) + sizeof(statemutability_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SmartContract_ABI_Entry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool anonymous = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          anonymous_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool constant = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          constant_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "protocol.SmartContract.ABI.Entry.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_inputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // .protocol.SmartContract.ABI.Entry.EntryType type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_type(static_cast<::protocol::SmartContract_ABI_Entry_EntryType>(val));
        } else goto handle_unusual;
        continue;
      // bool payable = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          payable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_statemutability(static_cast<::protocol::SmartContract_ABI_Entry_StateMutabilityType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SmartContract_ABI_Entry::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.SmartContract.ABI.Entry)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool anonymous = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &anonymous_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool constant = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &constant_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "protocol.SmartContract.ABI.Entry.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.SmartContract.ABI.Entry.EntryType type = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::protocol::SmartContract_ABI_Entry_EntryType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool payable = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &payable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_statemutability(static_cast< ::protocol::SmartContract_ABI_Entry_StateMutabilityType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.SmartContract.ABI.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.SmartContract.ABI.Entry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SmartContract_ABI_Entry::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.SmartContract.ABI.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool anonymous = 1;
  if (this->anonymous() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->anonymous(), output);
  }

  // bool constant = 2;
  if (this->constant() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->constant(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.SmartContract.ABI.Entry.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->inputs(static_cast<int>(i)),
      output);
  }

  // repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->outputs(static_cast<int>(i)),
      output);
  }

  // .protocol.SmartContract.ABI.Entry.EntryType type = 6;
  if (this->type() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      6, this->type(), output);
  }

  // bool payable = 7;
  if (this->payable() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(7, this->payable(), output);
  }

  // .protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;
  if (this->statemutability() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      8, this->statemutability(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.SmartContract.ABI.Entry)
}

::PROTOBUF_NAMESPACE_ID::uint8* SmartContract_ABI_Entry::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.SmartContract.ABI.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool anonymous = 1;
  if (this->anonymous() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->anonymous(), target);
  }

  // bool constant = 2;
  if (this->constant() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->constant(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.SmartContract.ABI.Entry.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->inputs(static_cast<int>(i)), target);
  }

  // repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->outputs(static_cast<int>(i)), target);
  }

  // .protocol.SmartContract.ABI.Entry.EntryType type = 6;
  if (this->type() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->type(), target);
  }

  // bool payable = 7;
  if (this->payable() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->payable(), target);
  }

  // .protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;
  if (this->statemutability() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->statemutability(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.SmartContract.ABI.Entry)
  return target;
}

size_t SmartContract_ABI_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.SmartContract.ABI.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->inputs(static_cast<int>(i)));
    }
  }

  // repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->outputs(static_cast<int>(i)));
    }
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bool anonymous = 1;
  if (this->anonymous() != 0) {
    total_size += 1 + 1;
  }

  // bool constant = 2;
  if (this->constant() != 0) {
    total_size += 1 + 1;
  }

  // bool payable = 7;
  if (this->payable() != 0) {
    total_size += 1 + 1;
  }

  // .protocol.SmartContract.ABI.Entry.EntryType type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->type());
  }

  // .protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;
  if (this->statemutability() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->statemutability());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SmartContract_ABI_Entry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.SmartContract.ABI.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const SmartContract_ABI_Entry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SmartContract_ABI_Entry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.SmartContract.ABI.Entry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.SmartContract.ABI.Entry)
    MergeFrom(*source);
  }
}

void SmartContract_ABI_Entry::MergeFrom(const SmartContract_ABI_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.SmartContract.ABI.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.anonymous() != 0) {
    set_anonymous(from.anonymous());
  }
  if (from.constant() != 0) {
    set_constant(from.constant());
  }
  if (from.payable() != 0) {
    set_payable(from.payable());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.statemutability() != 0) {
    set_statemutability(from.statemutability());
  }
}

void SmartContract_ABI_Entry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.SmartContract.ABI.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmartContract_ABI_Entry::CopyFrom(const SmartContract_ABI_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.SmartContract.ABI.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartContract_ABI_Entry::IsInitialized() const {
  return true;
}

void SmartContract_ABI_Entry::InternalSwap(SmartContract_ABI_Entry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&inputs_)->InternalSwap(CastToBase(&other->inputs_));
  CastToBase(&outputs_)->InternalSwap(CastToBase(&other->outputs_));
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(anonymous_, other->anonymous_);
  swap(constant_, other->constant_);
  swap(payable_, other->payable_);
  swap(type_, other->type_);
  swap(statemutability_, other->statemutability_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SmartContract_ABI_Entry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SmartContract_ABI::InitAsDefaultInstance() {
}
class SmartContract_ABI::_Internal {
 public:
};

SmartContract_ABI::SmartContract_ABI()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.SmartContract.ABI)
}
SmartContract_ABI::SmartContract_ABI(const SmartContract_ABI& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      entrys_(from.entrys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.SmartContract.ABI)
}

void SmartContract_ABI::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SmartContract_ABI_core_2fcontract_2fsmart_5fcontract_2eproto.base);
}

SmartContract_ABI::~SmartContract_ABI() {
  // @@protoc_insertion_point(destructor:protocol.SmartContract.ABI)
  SharedDtor();
}

void SmartContract_ABI::SharedDtor() {
}

void SmartContract_ABI::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SmartContract_ABI& SmartContract_ABI::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SmartContract_ABI_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  return *internal_default_instance();
}


void SmartContract_ABI::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.SmartContract.ABI)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entrys_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SmartContract_ABI::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .protocol.SmartContract.ABI.Entry entrys = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_entrys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SmartContract_ABI::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.SmartContract.ABI)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.SmartContract.ABI.Entry entrys = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_entrys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.SmartContract.ABI)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.SmartContract.ABI)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SmartContract_ABI::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.SmartContract.ABI)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.SmartContract.ABI.Entry entrys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entrys_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entrys(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.SmartContract.ABI)
}

::PROTOBUF_NAMESPACE_ID::uint8* SmartContract_ABI::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.SmartContract.ABI)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.SmartContract.ABI.Entry entrys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entrys_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entrys(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.SmartContract.ABI)
  return target;
}

size_t SmartContract_ABI::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.SmartContract.ABI)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protocol.SmartContract.ABI.Entry entrys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entrys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->entrys(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SmartContract_ABI::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.SmartContract.ABI)
  GOOGLE_DCHECK_NE(&from, this);
  const SmartContract_ABI* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SmartContract_ABI>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.SmartContract.ABI)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.SmartContract.ABI)
    MergeFrom(*source);
  }
}

void SmartContract_ABI::MergeFrom(const SmartContract_ABI& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.SmartContract.ABI)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entrys_.MergeFrom(from.entrys_);
}

void SmartContract_ABI::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.SmartContract.ABI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmartContract_ABI::CopyFrom(const SmartContract_ABI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.SmartContract.ABI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartContract_ABI::IsInitialized() const {
  return true;
}

void SmartContract_ABI::InternalSwap(SmartContract_ABI* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&entrys_)->InternalSwap(CastToBase(&other->entrys_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SmartContract_ABI::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SmartContract::InitAsDefaultInstance() {
  ::protocol::_SmartContract_default_instance_._instance.get_mutable()->abi_ = const_cast< ::protocol::SmartContract_ABI*>(
      ::protocol::SmartContract_ABI::internal_default_instance());
}
class SmartContract::_Internal {
 public:
  static const ::protocol::SmartContract_ABI& abi(const SmartContract* msg);
};

const ::protocol::SmartContract_ABI&
SmartContract::_Internal::abi(const SmartContract* msg) {
  return *msg->abi_;
}
SmartContract::SmartContract()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.SmartContract)
}
SmartContract::SmartContract(const SmartContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  origin_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.origin_address().empty()) {
    origin_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.origin_address_);
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.contract_address().empty()) {
    contract_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  bytecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.bytecode().empty()) {
    bytecode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bytecode_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  code_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.code_hash().empty()) {
    code_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.code_hash_);
  }
  trx_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.trx_hash().empty()) {
    trx_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.trx_hash_);
  }
  if (from.has_abi()) {
    abi_ = new ::protocol::SmartContract_ABI(*from.abi_);
  } else {
    abi_ = nullptr;
  }
  ::memcpy(&call_value_, &from.call_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&origin_energy_limit_) -
    reinterpret_cast<char*>(&call_value_)) + sizeof(origin_energy_limit_));
  // @@protoc_insertion_point(copy_constructor:protocol.SmartContract)
}

void SmartContract::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SmartContract_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  origin_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bytecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trx_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&abi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&origin_energy_limit_) -
      reinterpret_cast<char*>(&abi_)) + sizeof(origin_energy_limit_));
}

SmartContract::~SmartContract() {
  // @@protoc_insertion_point(destructor:protocol.SmartContract)
  SharedDtor();
}

void SmartContract::SharedDtor() {
  origin_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bytecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trx_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abi_;
}

void SmartContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SmartContract& SmartContract::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SmartContract_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  return *internal_default_instance();
}


void SmartContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.SmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  origin_address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bytecode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trx_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && abi_ != nullptr) {
    delete abi_;
  }
  abi_ = nullptr;
  ::memset(&call_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&origin_energy_limit_) -
      reinterpret_cast<char*>(&call_value_)) + sizeof(origin_energy_limit_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SmartContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes origin_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_origin_address(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_contract_address(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.SmartContract.ABI abi = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_abi(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes bytecode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_bytecode(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 call_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          call_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 consume_user_resource_percent = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          consume_user_resource_percent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "protocol.SmartContract.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 origin_energy_limit = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          origin_energy_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes code_hash = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_code_hash(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes trx_hash = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_trx_hash(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SmartContract::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.SmartContract)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes origin_address = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_origin_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes contract_address = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_contract_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.SmartContract.ABI abi = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_abi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bytecode = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytecode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 call_value = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &call_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 consume_user_resource_percent = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &consume_user_resource_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "protocol.SmartContract.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 origin_energy_limit = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &origin_energy_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes code_hash = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_code_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes trx_hash = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_trx_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.SmartContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.SmartContract)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SmartContract::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.SmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes origin_address = 1;
  if (this->origin_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->origin_address(), output);
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->contract_address(), output);
  }

  // .protocol.SmartContract.ABI abi = 3;
  if (this->has_abi()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::abi(this), output);
  }

  // bytes bytecode = 4;
  if (this->bytecode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->bytecode(), output);
  }

  // int64 call_value = 5;
  if (this->call_value() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(5, this->call_value(), output);
  }

  // int64 consume_user_resource_percent = 6;
  if (this->consume_user_resource_percent() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(6, this->consume_user_resource_percent(), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.SmartContract.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  // int64 origin_energy_limit = 8;
  if (this->origin_energy_limit() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(8, this->origin_energy_limit(), output);
  }

  // bytes code_hash = 9;
  if (this->code_hash().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->code_hash(), output);
  }

  // bytes trx_hash = 10;
  if (this->trx_hash().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->trx_hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.SmartContract)
}

::PROTOBUF_NAMESPACE_ID::uint8* SmartContract::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.SmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes origin_address = 1;
  if (this->origin_address().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        1, this->origin_address(), target);
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        2, this->contract_address(), target);
  }

  // .protocol.SmartContract.ABI abi = 3;
  if (this->has_abi()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::abi(this), target);
  }

  // bytes bytecode = 4;
  if (this->bytecode().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        4, this->bytecode(), target);
  }

  // int64 call_value = 5;
  if (this->call_value() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->call_value(), target);
  }

  // int64 consume_user_resource_percent = 6;
  if (this->consume_user_resource_percent() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->consume_user_resource_percent(), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.SmartContract.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  // int64 origin_energy_limit = 8;
  if (this->origin_energy_limit() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->origin_energy_limit(), target);
  }

  // bytes code_hash = 9;
  if (this->code_hash().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        9, this->code_hash(), target);
  }

  // bytes trx_hash = 10;
  if (this->trx_hash().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        10, this->trx_hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.SmartContract)
  return target;
}

size_t SmartContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.SmartContract)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes origin_address = 1;
  if (this->origin_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->origin_address());
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->contract_address());
  }

  // bytes bytecode = 4;
  if (this->bytecode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->bytecode());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes code_hash = 9;
  if (this->code_hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->code_hash());
  }

  // bytes trx_hash = 10;
  if (this->trx_hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->trx_hash());
  }

  // .protocol.SmartContract.ABI abi = 3;
  if (this->has_abi()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abi_);
  }

  // int64 call_value = 5;
  if (this->call_value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->call_value());
  }

  // int64 consume_user_resource_percent = 6;
  if (this->consume_user_resource_percent() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->consume_user_resource_percent());
  }

  // int64 origin_energy_limit = 8;
  if (this->origin_energy_limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->origin_energy_limit());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SmartContract::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.SmartContract)
  GOOGLE_DCHECK_NE(&from, this);
  const SmartContract* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SmartContract>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.SmartContract)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.SmartContract)
    MergeFrom(*source);
  }
}

void SmartContract::MergeFrom(const SmartContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.SmartContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.origin_address().size() > 0) {

    origin_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.origin_address_);
  }
  if (from.contract_address().size() > 0) {

    contract_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  if (from.bytecode().size() > 0) {

    bytecode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bytecode_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.code_hash().size() > 0) {

    code_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.code_hash_);
  }
  if (from.trx_hash().size() > 0) {

    trx_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.trx_hash_);
  }
  if (from.has_abi()) {
    mutable_abi()->::protocol::SmartContract_ABI::MergeFrom(from.abi());
  }
  if (from.call_value() != 0) {
    set_call_value(from.call_value());
  }
  if (from.consume_user_resource_percent() != 0) {
    set_consume_user_resource_percent(from.consume_user_resource_percent());
  }
  if (from.origin_energy_limit() != 0) {
    set_origin_energy_limit(from.origin_energy_limit());
  }
}

void SmartContract::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.SmartContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmartContract::CopyFrom(const SmartContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.SmartContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartContract::IsInitialized() const {
  return true;
}

void SmartContract::InternalSwap(SmartContract* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  origin_address_.Swap(&other->origin_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contract_address_.Swap(&other->contract_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bytecode_.Swap(&other->bytecode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  code_hash_.Swap(&other->code_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  trx_hash_.Swap(&other->trx_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(abi_, other->abi_);
  swap(call_value_, other->call_value_);
  swap(consume_user_resource_percent_, other->consume_user_resource_percent_);
  swap(origin_energy_limit_, other->origin_energy_limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SmartContract::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateSmartContract::InitAsDefaultInstance() {
  ::protocol::_CreateSmartContract_default_instance_._instance.get_mutable()->new_contract_ = const_cast< ::protocol::SmartContract*>(
      ::protocol::SmartContract::internal_default_instance());
}
class CreateSmartContract::_Internal {
 public:
  static const ::protocol::SmartContract& new_contract(const CreateSmartContract* msg);
};

const ::protocol::SmartContract&
CreateSmartContract::_Internal::new_contract(const CreateSmartContract* msg) {
  return *msg->new_contract_;
}
CreateSmartContract::CreateSmartContract()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.CreateSmartContract)
}
CreateSmartContract::CreateSmartContract(const CreateSmartContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.owner_address().empty()) {
    owner_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.has_new_contract()) {
    new_contract_ = new ::protocol::SmartContract(*from.new_contract_);
  } else {
    new_contract_ = nullptr;
  }
  ::memcpy(&call_token_value_, &from.call_token_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&token_id_) -
    reinterpret_cast<char*>(&call_token_value_)) + sizeof(token_id_));
  // @@protoc_insertion_point(copy_constructor:protocol.CreateSmartContract)
}

void CreateSmartContract::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateSmartContract_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&new_contract_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&token_id_) -
      reinterpret_cast<char*>(&new_contract_)) + sizeof(token_id_));
}

CreateSmartContract::~CreateSmartContract() {
  // @@protoc_insertion_point(destructor:protocol.CreateSmartContract)
  SharedDtor();
}

void CreateSmartContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete new_contract_;
}

void CreateSmartContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateSmartContract& CreateSmartContract::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateSmartContract_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  return *internal_default_instance();
}


void CreateSmartContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.CreateSmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && new_contract_ != nullptr) {
    delete new_contract_;
  }
  new_contract_ = nullptr;
  ::memset(&call_token_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&token_id_) -
      reinterpret_cast<char*>(&call_token_value_)) + sizeof(token_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateSmartContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes owner_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_owner_address(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.SmartContract new_contract = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_new_contract(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 call_token_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          call_token_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 token_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          token_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateSmartContract::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.CreateSmartContract)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.SmartContract new_contract = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_new_contract()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 call_token_value = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &call_token_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 token_id = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &token_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.CreateSmartContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.CreateSmartContract)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateSmartContract::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.CreateSmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // .protocol.SmartContract new_contract = 2;
  if (this->has_new_contract()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::new_contract(this), output);
  }

  // int64 call_token_value = 3;
  if (this->call_token_value() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->call_token_value(), output);
  }

  // int64 token_id = 4;
  if (this->token_id() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(4, this->token_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.CreateSmartContract)
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateSmartContract::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.CreateSmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // .protocol.SmartContract new_contract = 2;
  if (this->has_new_contract()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::new_contract(this), target);
  }

  // int64 call_token_value = 3;
  if (this->call_token_value() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->call_token_value(), target);
  }

  // int64 token_id = 4;
  if (this->token_id() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->token_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.CreateSmartContract)
  return target;
}

size_t CreateSmartContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.CreateSmartContract)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // .protocol.SmartContract new_contract = 2;
  if (this->has_new_contract()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *new_contract_);
  }

  // int64 call_token_value = 3;
  if (this->call_token_value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->call_token_value());
  }

  // int64 token_id = 4;
  if (this->token_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->token_id());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateSmartContract::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.CreateSmartContract)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSmartContract* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateSmartContract>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.CreateSmartContract)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.CreateSmartContract)
    MergeFrom(*source);
  }
}

void CreateSmartContract::MergeFrom(const CreateSmartContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.CreateSmartContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.has_new_contract()) {
    mutable_new_contract()->::protocol::SmartContract::MergeFrom(from.new_contract());
  }
  if (from.call_token_value() != 0) {
    set_call_token_value(from.call_token_value());
  }
  if (from.token_id() != 0) {
    set_token_id(from.token_id());
  }
}

void CreateSmartContract::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.CreateSmartContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSmartContract::CopyFrom(const CreateSmartContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.CreateSmartContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSmartContract::IsInitialized() const {
  return true;
}

void CreateSmartContract::InternalSwap(CreateSmartContract* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  owner_address_.Swap(&other->owner_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(new_contract_, other->new_contract_);
  swap(call_token_value_, other->call_token_value_);
  swap(token_id_, other->token_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSmartContract::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TriggerSmartContract::InitAsDefaultInstance() {
}
class TriggerSmartContract::_Internal {
 public:
};

TriggerSmartContract::TriggerSmartContract()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.TriggerSmartContract)
}
TriggerSmartContract::TriggerSmartContract(const TriggerSmartContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.owner_address().empty()) {
    owner_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.contract_address().empty()) {
    contract_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.data().empty()) {
    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&call_value_, &from.call_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&token_id_) -
    reinterpret_cast<char*>(&call_value_)) + sizeof(token_id_));
  // @@protoc_insertion_point(copy_constructor:protocol.TriggerSmartContract)
}

void TriggerSmartContract::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TriggerSmartContract_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&token_id_) -
      reinterpret_cast<char*>(&call_value_)) + sizeof(token_id_));
}

TriggerSmartContract::~TriggerSmartContract() {
  // @@protoc_insertion_point(destructor:protocol.TriggerSmartContract)
  SharedDtor();
}

void TriggerSmartContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TriggerSmartContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TriggerSmartContract& TriggerSmartContract::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TriggerSmartContract_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  return *internal_default_instance();
}


void TriggerSmartContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.TriggerSmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&token_id_) -
      reinterpret_cast<char*>(&call_value_)) + sizeof(token_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TriggerSmartContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes owner_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_owner_address(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_contract_address(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 call_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          call_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_data(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 call_token_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          call_token_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 token_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          token_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TriggerSmartContract::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.TriggerSmartContract)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes contract_address = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_contract_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 call_value = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &call_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 call_token_value = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &call_token_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 token_id = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &token_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.TriggerSmartContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.TriggerSmartContract)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TriggerSmartContract::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.TriggerSmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->contract_address(), output);
  }

  // int64 call_value = 3;
  if (this->call_value() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->call_value(), output);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  // int64 call_token_value = 5;
  if (this->call_token_value() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(5, this->call_token_value(), output);
  }

  // int64 token_id = 6;
  if (this->token_id() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(6, this->token_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.TriggerSmartContract)
}

::PROTOBUF_NAMESPACE_ID::uint8* TriggerSmartContract::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.TriggerSmartContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        2, this->contract_address(), target);
  }

  // int64 call_value = 3;
  if (this->call_value() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->call_value(), target);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  // int64 call_token_value = 5;
  if (this->call_token_value() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->call_token_value(), target);
  }

  // int64 token_id = 6;
  if (this->token_id() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->token_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.TriggerSmartContract)
  return target;
}

size_t TriggerSmartContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.TriggerSmartContract)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->contract_address());
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int64 call_value = 3;
  if (this->call_value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->call_value());
  }

  // int64 call_token_value = 5;
  if (this->call_token_value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->call_token_value());
  }

  // int64 token_id = 6;
  if (this->token_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->token_id());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TriggerSmartContract::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.TriggerSmartContract)
  GOOGLE_DCHECK_NE(&from, this);
  const TriggerSmartContract* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TriggerSmartContract>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.TriggerSmartContract)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.TriggerSmartContract)
    MergeFrom(*source);
  }
}

void TriggerSmartContract::MergeFrom(const TriggerSmartContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.TriggerSmartContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.contract_address().size() > 0) {

    contract_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.call_value() != 0) {
    set_call_value(from.call_value());
  }
  if (from.call_token_value() != 0) {
    set_call_token_value(from.call_token_value());
  }
  if (from.token_id() != 0) {
    set_token_id(from.token_id());
  }
}

void TriggerSmartContract::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.TriggerSmartContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TriggerSmartContract::CopyFrom(const TriggerSmartContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.TriggerSmartContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TriggerSmartContract::IsInitialized() const {
  return true;
}

void TriggerSmartContract::InternalSwap(TriggerSmartContract* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  owner_address_.Swap(&other->owner_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contract_address_.Swap(&other->contract_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(call_value_, other->call_value_);
  swap(call_token_value_, other->call_token_value_);
  swap(token_id_, other->token_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TriggerSmartContract::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClearABIContract::InitAsDefaultInstance() {
}
class ClearABIContract::_Internal {
 public:
};

ClearABIContract::ClearABIContract()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ClearABIContract)
}
ClearABIContract::ClearABIContract(const ClearABIContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.owner_address().empty()) {
    owner_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.contract_address().empty()) {
    contract_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.ClearABIContract)
}

void ClearABIContract::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClearABIContract_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ClearABIContract::~ClearABIContract() {
  // @@protoc_insertion_point(destructor:protocol.ClearABIContract)
  SharedDtor();
}

void ClearABIContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClearABIContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearABIContract& ClearABIContract::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearABIContract_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  return *internal_default_instance();
}


void ClearABIContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ClearABIContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClearABIContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes owner_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_owner_address(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_contract_address(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClearABIContract::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ClearABIContract)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes contract_address = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_contract_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ClearABIContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ClearABIContract)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClearABIContract::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ClearABIContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->contract_address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ClearABIContract)
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearABIContract::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ClearABIContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        2, this->contract_address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ClearABIContract)
  return target;
}

size_t ClearABIContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ClearABIContract)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->contract_address());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearABIContract::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ClearABIContract)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearABIContract* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearABIContract>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ClearABIContract)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ClearABIContract)
    MergeFrom(*source);
  }
}

void ClearABIContract::MergeFrom(const ClearABIContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ClearABIContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.contract_address().size() > 0) {

    contract_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
}

void ClearABIContract::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ClearABIContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearABIContract::CopyFrom(const ClearABIContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ClearABIContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearABIContract::IsInitialized() const {
  return true;
}

void ClearABIContract::InternalSwap(ClearABIContract* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  owner_address_.Swap(&other->owner_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contract_address_.Swap(&other->contract_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearABIContract::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateSettingContract::InitAsDefaultInstance() {
}
class UpdateSettingContract::_Internal {
 public:
};

UpdateSettingContract::UpdateSettingContract()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.UpdateSettingContract)
}
UpdateSettingContract::UpdateSettingContract(const UpdateSettingContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.owner_address().empty()) {
    owner_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.contract_address().empty()) {
    contract_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  consume_user_resource_percent_ = from.consume_user_resource_percent_;
  // @@protoc_insertion_point(copy_constructor:protocol.UpdateSettingContract)
}

void UpdateSettingContract::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateSettingContract_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  consume_user_resource_percent_ = PROTOBUF_LONGLONG(0);
}

UpdateSettingContract::~UpdateSettingContract() {
  // @@protoc_insertion_point(destructor:protocol.UpdateSettingContract)
  SharedDtor();
}

void UpdateSettingContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateSettingContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateSettingContract& UpdateSettingContract::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateSettingContract_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  return *internal_default_instance();
}


void UpdateSettingContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.UpdateSettingContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  consume_user_resource_percent_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateSettingContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes owner_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_owner_address(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_contract_address(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 consume_user_resource_percent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          consume_user_resource_percent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateSettingContract::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.UpdateSettingContract)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes contract_address = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_contract_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 consume_user_resource_percent = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &consume_user_resource_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.UpdateSettingContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.UpdateSettingContract)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateSettingContract::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.UpdateSettingContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->contract_address(), output);
  }

  // int64 consume_user_resource_percent = 3;
  if (this->consume_user_resource_percent() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->consume_user_resource_percent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.UpdateSettingContract)
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateSettingContract::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.UpdateSettingContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        2, this->contract_address(), target);
  }

  // int64 consume_user_resource_percent = 3;
  if (this->consume_user_resource_percent() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->consume_user_resource_percent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.UpdateSettingContract)
  return target;
}

size_t UpdateSettingContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.UpdateSettingContract)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->contract_address());
  }

  // int64 consume_user_resource_percent = 3;
  if (this->consume_user_resource_percent() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->consume_user_resource_percent());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateSettingContract::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.UpdateSettingContract)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateSettingContract* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateSettingContract>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.UpdateSettingContract)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.UpdateSettingContract)
    MergeFrom(*source);
  }
}

void UpdateSettingContract::MergeFrom(const UpdateSettingContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.UpdateSettingContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.contract_address().size() > 0) {

    contract_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  if (from.consume_user_resource_percent() != 0) {
    set_consume_user_resource_percent(from.consume_user_resource_percent());
  }
}

void UpdateSettingContract::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.UpdateSettingContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSettingContract::CopyFrom(const UpdateSettingContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.UpdateSettingContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSettingContract::IsInitialized() const {
  return true;
}

void UpdateSettingContract::InternalSwap(UpdateSettingContract* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  owner_address_.Swap(&other->owner_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contract_address_.Swap(&other->contract_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(consume_user_resource_percent_, other->consume_user_resource_percent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSettingContract::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateEnergyLimitContract::InitAsDefaultInstance() {
}
class UpdateEnergyLimitContract::_Internal {
 public:
};

UpdateEnergyLimitContract::UpdateEnergyLimitContract()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.UpdateEnergyLimitContract)
}
UpdateEnergyLimitContract::UpdateEnergyLimitContract(const UpdateEnergyLimitContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.owner_address().empty()) {
    owner_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.contract_address().empty()) {
    contract_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  origin_energy_limit_ = from.origin_energy_limit_;
  // @@protoc_insertion_point(copy_constructor:protocol.UpdateEnergyLimitContract)
}

void UpdateEnergyLimitContract::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateEnergyLimitContract_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  owner_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  origin_energy_limit_ = PROTOBUF_LONGLONG(0);
}

UpdateEnergyLimitContract::~UpdateEnergyLimitContract() {
  // @@protoc_insertion_point(destructor:protocol.UpdateEnergyLimitContract)
  SharedDtor();
}

void UpdateEnergyLimitContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateEnergyLimitContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateEnergyLimitContract& UpdateEnergyLimitContract::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateEnergyLimitContract_core_2fcontract_2fsmart_5fcontract_2eproto.base);
  return *internal_default_instance();
}


void UpdateEnergyLimitContract::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.UpdateEnergyLimitContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  origin_energy_limit_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateEnergyLimitContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes owner_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_owner_address(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes contract_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_contract_address(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 origin_energy_limit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          origin_energy_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateEnergyLimitContract::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.UpdateEnergyLimitContract)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes contract_address = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_contract_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 origin_energy_limit = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &origin_energy_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.UpdateEnergyLimitContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.UpdateEnergyLimitContract)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateEnergyLimitContract::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.UpdateEnergyLimitContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->contract_address(), output);
  }

  // int64 origin_energy_limit = 3;
  if (this->origin_energy_limit() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->origin_energy_limit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.UpdateEnergyLimitContract)
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEnergyLimitContract::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.UpdateEnergyLimitContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        2, this->contract_address(), target);
  }

  // int64 origin_energy_limit = 3;
  if (this->origin_energy_limit() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->origin_energy_limit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.UpdateEnergyLimitContract)
  return target;
}

size_t UpdateEnergyLimitContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.UpdateEnergyLimitContract)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->contract_address());
  }

  // int64 origin_energy_limit = 3;
  if (this->origin_energy_limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->origin_energy_limit());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEnergyLimitContract::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.UpdateEnergyLimitContract)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEnergyLimitContract* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEnergyLimitContract>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.UpdateEnergyLimitContract)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.UpdateEnergyLimitContract)
    MergeFrom(*source);
  }
}

void UpdateEnergyLimitContract::MergeFrom(const UpdateEnergyLimitContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.UpdateEnergyLimitContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.contract_address().size() > 0) {

    contract_address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  if (from.origin_energy_limit() != 0) {
    set_origin_energy_limit(from.origin_energy_limit());
  }
}

void UpdateEnergyLimitContract::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.UpdateEnergyLimitContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEnergyLimitContract::CopyFrom(const UpdateEnergyLimitContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.UpdateEnergyLimitContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEnergyLimitContract::IsInitialized() const {
  return true;
}

void UpdateEnergyLimitContract::InternalSwap(UpdateEnergyLimitContract* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  owner_address_.Swap(&other->owner_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contract_address_.Swap(&other->contract_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(origin_energy_limit_, other->origin_energy_limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEnergyLimitContract::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protocol::SmartContract_ABI_Entry_Param* Arena::CreateMaybeMessage< ::protocol::SmartContract_ABI_Entry_Param >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::SmartContract_ABI_Entry_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::SmartContract_ABI_Entry* Arena::CreateMaybeMessage< ::protocol::SmartContract_ABI_Entry >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::SmartContract_ABI_Entry >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::SmartContract_ABI* Arena::CreateMaybeMessage< ::protocol::SmartContract_ABI >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::SmartContract_ABI >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::SmartContract* Arena::CreateMaybeMessage< ::protocol::SmartContract >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::SmartContract >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::CreateSmartContract* Arena::CreateMaybeMessage< ::protocol::CreateSmartContract >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::CreateSmartContract >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::TriggerSmartContract* Arena::CreateMaybeMessage< ::protocol::TriggerSmartContract >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::TriggerSmartContract >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::ClearABIContract* Arena::CreateMaybeMessage< ::protocol::ClearABIContract >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::ClearABIContract >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::UpdateSettingContract* Arena::CreateMaybeMessage< ::protocol::UpdateSettingContract >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::UpdateSettingContract >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::UpdateEnergyLimitContract* Arena::CreateMaybeMessage< ::protocol::UpdateEnergyLimitContract >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::UpdateEnergyLimitContract >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
