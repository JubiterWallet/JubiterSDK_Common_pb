// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Jub_EOS.proto

#include "Jub_EOS.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fCommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Bip44Path_Jub_5fCommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fEOS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ActionEOS_Jub_5fEOS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fEOS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuyRamAction_Jub_5fEOS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fEOS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DelegateAction_Jub_5fEOS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fEOS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SellRamAction_Jub_5fEOS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fEOS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TransferAction_Jub_5fEOS_2eproto;
namespace JUB {
namespace Proto {
namespace EOS {
class TransferActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TransferAction> _instance;
} _TransferAction_default_instance_;
class DelegateActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DelegateAction> _instance;
} _DelegateAction_default_instance_;
class BuyRamActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BuyRamAction> _instance;
} _BuyRamAction_default_instance_;
class SellRamActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SellRamAction> _instance;
} _SellRamAction_default_instance_;
class ActionEOSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActionEOS> _instance;
  const ::JUB::Proto::EOS::TransferAction* xfer_action_;
  const ::JUB::Proto::EOS::DelegateAction* dele_action_;
  const ::JUB::Proto::EOS::BuyRamAction* buy_ram_action_;
  const ::JUB::Proto::EOS::SellRamAction* sell_ram_action_;
} _ActionEOS_default_instance_;
class ActionListEOSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActionListEOS> _instance;
} _ActionListEOS_default_instance_;
class TransactionEOSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TransactionEOS> _instance;
} _TransactionEOS_default_instance_;
}  // namespace EOS
}  // namespace Proto
}  // namespace JUB
static void InitDefaultsscc_info_ActionEOS_Jub_5fEOS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::EOS::_ActionEOS_default_instance_;
    new (ptr) ::JUB::Proto::EOS::ActionEOS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::EOS::ActionEOS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ActionEOS_Jub_5fEOS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsscc_info_ActionEOS_Jub_5fEOS_2eproto}, {
      &scc_info_TransferAction_Jub_5fEOS_2eproto.base,
      &scc_info_DelegateAction_Jub_5fEOS_2eproto.base,
      &scc_info_BuyRamAction_Jub_5fEOS_2eproto.base,
      &scc_info_SellRamAction_Jub_5fEOS_2eproto.base,}};

static void InitDefaultsscc_info_ActionListEOS_Jub_5fEOS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::EOS::_ActionListEOS_default_instance_;
    new (ptr) ::JUB::Proto::EOS::ActionListEOS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::EOS::ActionListEOS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ActionListEOS_Jub_5fEOS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ActionListEOS_Jub_5fEOS_2eproto}, {
      &scc_info_ActionEOS_Jub_5fEOS_2eproto.base,}};

static void InitDefaultsscc_info_BuyRamAction_Jub_5fEOS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::EOS::_BuyRamAction_default_instance_;
    new (ptr) ::JUB::Proto::EOS::BuyRamAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::EOS::BuyRamAction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuyRamAction_Jub_5fEOS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_BuyRamAction_Jub_5fEOS_2eproto}, {}};

static void InitDefaultsscc_info_DelegateAction_Jub_5fEOS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::EOS::_DelegateAction_default_instance_;
    new (ptr) ::JUB::Proto::EOS::DelegateAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::EOS::DelegateAction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DelegateAction_Jub_5fEOS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_DelegateAction_Jub_5fEOS_2eproto}, {}};

static void InitDefaultsscc_info_SellRamAction_Jub_5fEOS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::EOS::_SellRamAction_default_instance_;
    new (ptr) ::JUB::Proto::EOS::SellRamAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::EOS::SellRamAction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SellRamAction_Jub_5fEOS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SellRamAction_Jub_5fEOS_2eproto}, {}};

static void InitDefaultsscc_info_TransactionEOS_Jub_5fEOS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::EOS::_TransactionEOS_default_instance_;
    new (ptr) ::JUB::Proto::EOS::TransactionEOS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::EOS::TransactionEOS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TransactionEOS_Jub_5fEOS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_TransactionEOS_Jub_5fEOS_2eproto}, {
      &scc_info_Bip44Path_Jub_5fCommon_2eproto.base,}};

static void InitDefaultsscc_info_TransferAction_Jub_5fEOS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::EOS::_TransferAction_default_instance_;
    new (ptr) ::JUB::Proto::EOS::TransferAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::EOS::TransferAction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TransferAction_Jub_5fEOS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_TransferAction_Jub_5fEOS_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Jub_5fEOS_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Jub_5fEOS_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Jub_5fEOS_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Jub_5fEOS_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransferAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransferAction, from_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransferAction, to_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransferAction, asset_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransferAction, memo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::DelegateAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::DelegateAction, from_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::DelegateAction, receiver_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::DelegateAction, net_qty_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::DelegateAction, cpu_qty_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::DelegateAction, transfer_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::DelegateAction, stake_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::BuyRamAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::BuyRamAction, payer_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::BuyRamAction, quant_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::BuyRamAction, receiver_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::SellRamAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::SellRamAction, account_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::SellRamAction, byte_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionEOS, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionEOS, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionEOS, type_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionEOS, currency_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionEOS, name_),
  offsetof(::JUB::Proto::EOS::ActionEOSDefaultTypeInternal, xfer_action_),
  offsetof(::JUB::Proto::EOS::ActionEOSDefaultTypeInternal, dele_action_),
  offsetof(::JUB::Proto::EOS::ActionEOSDefaultTypeInternal, buy_ram_action_),
  offsetof(::JUB::Proto::EOS::ActionEOSDefaultTypeInternal, sell_ram_action_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionEOS, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionListEOS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionListEOS, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransactionEOS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransactionEOS, path_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransactionEOS, chainid_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransactionEOS, expiration_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransactionEOS, referenceblockid_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransactionEOS, referenceblocktime_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransactionEOS, actionsinjson_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::JUB::Proto::EOS::TransferAction)},
  { 9, -1, sizeof(::JUB::Proto::EOS::DelegateAction)},
  { 20, -1, sizeof(::JUB::Proto::EOS::BuyRamAction)},
  { 28, -1, sizeof(::JUB::Proto::EOS::SellRamAction)},
  { 35, -1, sizeof(::JUB::Proto::EOS::ActionEOS)},
  { 48, -1, sizeof(::JUB::Proto::EOS::ActionListEOS)},
  { 54, -1, sizeof(::JUB::Proto::EOS::TransactionEOS)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::EOS::_TransferAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::EOS::_DelegateAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::EOS::_BuyRamAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::EOS::_SellRamAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::EOS::_ActionEOS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::EOS::_ActionListEOS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::EOS::_TransactionEOS_default_instance_),
};

const char descriptor_table_protodef_Jub_5fEOS_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rJub_EOS.proto\022\rJUB.Proto.EOS\032\020Jub_Comm"
  "on.proto\"G\n\016TransferAction\022\014\n\004from\030\001 \001(\t"
  "\022\n\n\002to\030\002 \001(\t\022\r\n\005asset\030\003 \001(\t\022\014\n\004memo\030\004 \001("
  "\t\"s\n\016DelegateAction\022\014\n\004from\030\001 \001(\t\022\020\n\010rec"
  "eiver\030\002 \001(\t\022\017\n\007net_qty\030\003 \001(\t\022\017\n\007cpu_qty\030"
  "\004 \001(\t\022\020\n\010transfer\030\005 \001(\010\022\r\n\005stake\030\006 \001(\010\">"
  "\n\014BuyRamAction\022\r\n\005payer\030\001 \001(\t\022\r\n\005quant\030\002"
  " \001(\t\022\020\n\010receiver\030\003 \001(\t\".\n\rSellRamAction\022"
  "\017\n\007account\030\001 \001(\t\022\014\n\004byte\030\002 \001(\t\"\304\002\n\tActio"
  "nEOS\0221\n\004type\030\001 \001(\0162#.JUB.Proto.EOS.ENUM_"
  "EOS_ACTION_TYPE\022\020\n\010currency\030\002 \001(\t\022\014\n\004nam"
  "e\030\003 \001(\t\0224\n\013xfer_action\030\004 \001(\0132\035.JUB.Proto"
  ".EOS.TransferActionH\000\0224\n\013dele_action\030\005 \001"
  "(\0132\035.JUB.Proto.EOS.DelegateActionH\000\0225\n\016b"
  "uy_ram_action\030\006 \001(\0132\033.JUB.Proto.EOS.BuyR"
  "amActionH\000\0227\n\017sell_ram_action\030\007 \001(\0132\034.JU"
  "B.Proto.EOS.SellRamActionH\000B\010\n\006action\":\n"
  "\rActionListEOS\022)\n\007actions\030\001 \003(\0132\030.JUB.Pr"
  "oto.EOS.ActionEOS\"\255\001\n\016TransactionEOS\022)\n\004"
  "path\030\001 \001(\0132\033.JUB.Proto.Common.Bip44Path\022"
  "\017\n\007chainID\030\002 \001(\t\022\022\n\nexpiration\030\003 \001(\t\022\030\n\020"
  "referenceBlockId\030\004 \001(\t\022\032\n\022referenceBlock"
  "Time\030\005 \001(\t\022\025\n\ractionsInJSON\030\006 \001(\t*O\n\024ENU"
  "M_EOS_ACTION_TYPE\022\010\n\004XFER\020\000\022\010\n\004DELE\020\001\022\n\n"
  "\006UNDELE\020\002\022\n\n\006BUYRAM\020\003\022\013\n\007SELLRAM\020\004B.\n\025co"
  "m.jubiter.sdk.protoB\tEOSProtos\242\002\tEOSProt"
  "osb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Jub_5fEOS_2eproto_deps[1] = {
  &::descriptor_table_Jub_5fCommon_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Jub_5fEOS_2eproto_sccs[7] = {
  &scc_info_ActionEOS_Jub_5fEOS_2eproto.base,
  &scc_info_ActionListEOS_Jub_5fEOS_2eproto.base,
  &scc_info_BuyRamAction_Jub_5fEOS_2eproto.base,
  &scc_info_DelegateAction_Jub_5fEOS_2eproto.base,
  &scc_info_SellRamAction_Jub_5fEOS_2eproto.base,
  &scc_info_TransactionEOS_Jub_5fEOS_2eproto.base,
  &scc_info_TransferAction_Jub_5fEOS_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Jub_5fEOS_2eproto_once;
static bool descriptor_table_Jub_5fEOS_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Jub_5fEOS_2eproto = {
  &descriptor_table_Jub_5fEOS_2eproto_initialized, descriptor_table_protodef_Jub_5fEOS_2eproto, "Jub_EOS.proto", 1050,
  &descriptor_table_Jub_5fEOS_2eproto_once, descriptor_table_Jub_5fEOS_2eproto_sccs, descriptor_table_Jub_5fEOS_2eproto_deps, 7, 1,
  schemas, file_default_instances, TableStruct_Jub_5fEOS_2eproto::offsets,
  file_level_metadata_Jub_5fEOS_2eproto, 7, file_level_enum_descriptors_Jub_5fEOS_2eproto, file_level_service_descriptors_Jub_5fEOS_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Jub_5fEOS_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Jub_5fEOS_2eproto), true);
namespace JUB {
namespace Proto {
namespace EOS {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ENUM_EOS_ACTION_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Jub_5fEOS_2eproto);
  return file_level_enum_descriptors_Jub_5fEOS_2eproto[0];
}
bool ENUM_EOS_ACTION_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TransferAction::InitAsDefaultInstance() {
}
class TransferAction::_Internal {
 public:
};

TransferAction::TransferAction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.EOS.TransferAction)
}
TransferAction::TransferAction(const TransferAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.from().empty()) {
    from_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  to_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.to().empty()) {
    to_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  asset_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.asset().empty()) {
    asset_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.asset_);
  }
  memo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.memo().empty()) {
    memo_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.EOS.TransferAction)
}

void TransferAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TransferAction_Jub_5fEOS_2eproto.base);
  from_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  asset_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  memo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TransferAction::~TransferAction() {
  // @@protoc_insertion_point(destructor:JUB.Proto.EOS.TransferAction)
  SharedDtor();
}

void TransferAction::SharedDtor() {
  from_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  asset_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  memo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TransferAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransferAction& TransferAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TransferAction_Jub_5fEOS_2eproto.base);
  return *internal_default_instance();
}


void TransferAction::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.EOS.TransferAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  asset_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  memo_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransferAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_from(), ptr, ctx, "JUB.Proto.EOS.TransferAction.from");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_to(), ptr, ctx, "JUB.Proto.EOS.TransferAction.to");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string asset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_asset(), ptr, ctx, "JUB.Proto.EOS.TransferAction.asset");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string memo = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_memo(), ptr, ctx, "JUB.Proto.EOS.TransferAction.memo");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransferAction::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:JUB.Proto.EOS.TransferAction)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.TransferAction.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.TransferAction.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string asset = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_asset()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->asset().data(), static_cast<int>(this->asset().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.TransferAction.asset"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string memo = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_memo()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->memo().data(), static_cast<int>(this->memo().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.TransferAction.memo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JUB.Proto.EOS.TransferAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JUB.Proto.EOS.TransferAction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransferAction::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JUB.Proto.EOS.TransferAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransferAction.from");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from(), output);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransferAction.to");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to(), output);
  }

  // string asset = 3;
  if (this->asset().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->asset().data(), static_cast<int>(this->asset().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransferAction.asset");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->asset(), output);
  }

  // string memo = 4;
  if (this->memo().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->memo().data(), static_cast<int>(this->memo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransferAction.memo");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->memo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JUB.Proto.EOS.TransferAction)
}

::PROTOBUF_NAMESPACE_ID::uint8* TransferAction::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.EOS.TransferAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransferAction.from");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransferAction.to");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->to(), target);
  }

  // string asset = 3;
  if (this->asset().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->asset().data(), static_cast<int>(this->asset().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransferAction.asset");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->asset(), target);
  }

  // string memo = 4;
  if (this->memo().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->memo().data(), static_cast<int>(this->memo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransferAction.memo");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->memo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.EOS.TransferAction)
  return target;
}

size_t TransferAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.EOS.TransferAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string to = 2;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string asset = 3;
  if (this->asset().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->asset());
  }

  // string memo = 4;
  if (this->memo().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->memo());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.EOS.TransferAction)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransferAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.EOS.TransferAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.EOS.TransferAction)
    MergeFrom(*source);
  }
}

void TransferAction::MergeFrom(const TransferAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.EOS.TransferAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.asset().size() > 0) {

    asset_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.asset_);
  }
  if (from.memo().size() > 0) {

    memo_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
}

void TransferAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.EOS.TransferAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferAction::CopyFrom(const TransferAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.EOS.TransferAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferAction::IsInitialized() const {
  return true;
}

void TransferAction::InternalSwap(TransferAction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  from_.Swap(&other->from_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  asset_.Swap(&other->asset_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  memo_.Swap(&other->memo_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata TransferAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DelegateAction::InitAsDefaultInstance() {
}
class DelegateAction::_Internal {
 public:
};

DelegateAction::DelegateAction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.EOS.DelegateAction)
}
DelegateAction::DelegateAction(const DelegateAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.from().empty()) {
    from_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.receiver().empty()) {
    receiver_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  net_qty_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.net_qty().empty()) {
    net_qty_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.net_qty_);
  }
  cpu_qty_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.cpu_qty().empty()) {
    cpu_qty_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cpu_qty_);
  }
  ::memcpy(&transfer_, &from.transfer_,
    static_cast<size_t>(reinterpret_cast<char*>(&stake_) -
    reinterpret_cast<char*>(&transfer_)) + sizeof(stake_));
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.EOS.DelegateAction)
}

void DelegateAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DelegateAction_Jub_5fEOS_2eproto.base);
  from_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  net_qty_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cpu_qty_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&transfer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stake_) -
      reinterpret_cast<char*>(&transfer_)) + sizeof(stake_));
}

DelegateAction::~DelegateAction() {
  // @@protoc_insertion_point(destructor:JUB.Proto.EOS.DelegateAction)
  SharedDtor();
}

void DelegateAction::SharedDtor() {
  from_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  net_qty_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cpu_qty_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DelegateAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DelegateAction& DelegateAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DelegateAction_Jub_5fEOS_2eproto.base);
  return *internal_default_instance();
}


void DelegateAction::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.EOS.DelegateAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  net_qty_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cpu_qty_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&transfer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stake_) -
      reinterpret_cast<char*>(&transfer_)) + sizeof(stake_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DelegateAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_from(), ptr, ctx, "JUB.Proto.EOS.DelegateAction.from");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string receiver = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_receiver(), ptr, ctx, "JUB.Proto.EOS.DelegateAction.receiver");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string net_qty = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_net_qty(), ptr, ctx, "JUB.Proto.EOS.DelegateAction.net_qty");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cpu_qty = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_cpu_qty(), ptr, ctx, "JUB.Proto.EOS.DelegateAction.cpu_qty");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool transfer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          transfer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool stake = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          stake_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DelegateAction::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:JUB.Proto.EOS.DelegateAction)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.DelegateAction.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string receiver = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->receiver().data(), static_cast<int>(this->receiver().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.DelegateAction.receiver"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string net_qty = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_net_qty()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->net_qty().data(), static_cast<int>(this->net_qty().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.DelegateAction.net_qty"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cpu_qty = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_cpu_qty()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->cpu_qty().data(), static_cast<int>(this->cpu_qty().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.DelegateAction.cpu_qty"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool transfer = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &transfer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stake = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stake_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JUB.Proto.EOS.DelegateAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JUB.Proto.EOS.DelegateAction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DelegateAction::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JUB.Proto.EOS.DelegateAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.DelegateAction.from");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from(), output);
  }

  // string receiver = 2;
  if (this->receiver().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->receiver().data(), static_cast<int>(this->receiver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.DelegateAction.receiver");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->receiver(), output);
  }

  // string net_qty = 3;
  if (this->net_qty().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->net_qty().data(), static_cast<int>(this->net_qty().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.DelegateAction.net_qty");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->net_qty(), output);
  }

  // string cpu_qty = 4;
  if (this->cpu_qty().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->cpu_qty().data(), static_cast<int>(this->cpu_qty().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.DelegateAction.cpu_qty");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cpu_qty(), output);
  }

  // bool transfer = 5;
  if (this->transfer() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->transfer(), output);
  }

  // bool stake = 6;
  if (this->stake() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->stake(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JUB.Proto.EOS.DelegateAction)
}

::PROTOBUF_NAMESPACE_ID::uint8* DelegateAction::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.EOS.DelegateAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.DelegateAction.from");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }

  // string receiver = 2;
  if (this->receiver().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->receiver().data(), static_cast<int>(this->receiver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.DelegateAction.receiver");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->receiver(), target);
  }

  // string net_qty = 3;
  if (this->net_qty().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->net_qty().data(), static_cast<int>(this->net_qty().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.DelegateAction.net_qty");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->net_qty(), target);
  }

  // string cpu_qty = 4;
  if (this->cpu_qty().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->cpu_qty().data(), static_cast<int>(this->cpu_qty().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.DelegateAction.cpu_qty");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->cpu_qty(), target);
  }

  // bool transfer = 5;
  if (this->transfer() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->transfer(), target);
  }

  // bool stake = 6;
  if (this->stake() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->stake(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.EOS.DelegateAction)
  return target;
}

size_t DelegateAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.EOS.DelegateAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string receiver = 2;
  if (this->receiver().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->receiver());
  }

  // string net_qty = 3;
  if (this->net_qty().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->net_qty());
  }

  // string cpu_qty = 4;
  if (this->cpu_qty().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->cpu_qty());
  }

  // bool transfer = 5;
  if (this->transfer() != 0) {
    total_size += 1 + 1;
  }

  // bool stake = 6;
  if (this->stake() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DelegateAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.EOS.DelegateAction)
  GOOGLE_DCHECK_NE(&from, this);
  const DelegateAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DelegateAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.EOS.DelegateAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.EOS.DelegateAction)
    MergeFrom(*source);
  }
}

void DelegateAction::MergeFrom(const DelegateAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.EOS.DelegateAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.receiver().size() > 0) {

    receiver_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  if (from.net_qty().size() > 0) {

    net_qty_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.net_qty_);
  }
  if (from.cpu_qty().size() > 0) {

    cpu_qty_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cpu_qty_);
  }
  if (from.transfer() != 0) {
    set_transfer(from.transfer());
  }
  if (from.stake() != 0) {
    set_stake(from.stake());
  }
}

void DelegateAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.EOS.DelegateAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelegateAction::CopyFrom(const DelegateAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.EOS.DelegateAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelegateAction::IsInitialized() const {
  return true;
}

void DelegateAction::InternalSwap(DelegateAction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  from_.Swap(&other->from_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  receiver_.Swap(&other->receiver_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  net_qty_.Swap(&other->net_qty_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cpu_qty_.Swap(&other->cpu_qty_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transfer_, other->transfer_);
  swap(stake_, other->stake_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DelegateAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BuyRamAction::InitAsDefaultInstance() {
}
class BuyRamAction::_Internal {
 public:
};

BuyRamAction::BuyRamAction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.EOS.BuyRamAction)
}
BuyRamAction::BuyRamAction(const BuyRamAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.payer().empty()) {
    payer_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payer_);
  }
  quant_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.quant().empty()) {
    quant_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.quant_);
  }
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.receiver().empty()) {
    receiver_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.EOS.BuyRamAction)
}

void BuyRamAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BuyRamAction_Jub_5fEOS_2eproto.base);
  payer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  quant_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BuyRamAction::~BuyRamAction() {
  // @@protoc_insertion_point(destructor:JUB.Proto.EOS.BuyRamAction)
  SharedDtor();
}

void BuyRamAction::SharedDtor() {
  payer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  quant_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BuyRamAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuyRamAction& BuyRamAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BuyRamAction_Jub_5fEOS_2eproto.base);
  return *internal_default_instance();
}


void BuyRamAction::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.EOS.BuyRamAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payer_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  quant_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BuyRamAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string payer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_payer(), ptr, ctx, "JUB.Proto.EOS.BuyRamAction.payer");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string quant = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_quant(), ptr, ctx, "JUB.Proto.EOS.BuyRamAction.quant");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string receiver = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_receiver(), ptr, ctx, "JUB.Proto.EOS.BuyRamAction.receiver");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BuyRamAction::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:JUB.Proto.EOS.BuyRamAction)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string payer = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_payer()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->payer().data(), static_cast<int>(this->payer().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.BuyRamAction.payer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string quant = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_quant()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->quant().data(), static_cast<int>(this->quant().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.BuyRamAction.quant"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string receiver = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->receiver().data(), static_cast<int>(this->receiver().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.BuyRamAction.receiver"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JUB.Proto.EOS.BuyRamAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JUB.Proto.EOS.BuyRamAction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BuyRamAction::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JUB.Proto.EOS.BuyRamAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string payer = 1;
  if (this->payer().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->payer().data(), static_cast<int>(this->payer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.BuyRamAction.payer");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->payer(), output);
  }

  // string quant = 2;
  if (this->quant().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->quant().data(), static_cast<int>(this->quant().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.BuyRamAction.quant");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->quant(), output);
  }

  // string receiver = 3;
  if (this->receiver().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->receiver().data(), static_cast<int>(this->receiver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.BuyRamAction.receiver");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->receiver(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JUB.Proto.EOS.BuyRamAction)
}

::PROTOBUF_NAMESPACE_ID::uint8* BuyRamAction::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.EOS.BuyRamAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string payer = 1;
  if (this->payer().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->payer().data(), static_cast<int>(this->payer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.BuyRamAction.payer");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->payer(), target);
  }

  // string quant = 2;
  if (this->quant().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->quant().data(), static_cast<int>(this->quant().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.BuyRamAction.quant");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->quant(), target);
  }

  // string receiver = 3;
  if (this->receiver().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->receiver().data(), static_cast<int>(this->receiver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.BuyRamAction.receiver");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->receiver(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.EOS.BuyRamAction)
  return target;
}

size_t BuyRamAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.EOS.BuyRamAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payer = 1;
  if (this->payer().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->payer());
  }

  // string quant = 2;
  if (this->quant().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->quant());
  }

  // string receiver = 3;
  if (this->receiver().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->receiver());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuyRamAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.EOS.BuyRamAction)
  GOOGLE_DCHECK_NE(&from, this);
  const BuyRamAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuyRamAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.EOS.BuyRamAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.EOS.BuyRamAction)
    MergeFrom(*source);
  }
}

void BuyRamAction::MergeFrom(const BuyRamAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.EOS.BuyRamAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payer().size() > 0) {

    payer_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payer_);
  }
  if (from.quant().size() > 0) {

    quant_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.quant_);
  }
  if (from.receiver().size() > 0) {

    receiver_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
}

void BuyRamAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.EOS.BuyRamAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyRamAction::CopyFrom(const BuyRamAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.EOS.BuyRamAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyRamAction::IsInitialized() const {
  return true;
}

void BuyRamAction::InternalSwap(BuyRamAction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  payer_.Swap(&other->payer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  quant_.Swap(&other->quant_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  receiver_.Swap(&other->receiver_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata BuyRamAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SellRamAction::InitAsDefaultInstance() {
}
class SellRamAction::_Internal {
 public:
};

SellRamAction::SellRamAction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.EOS.SellRamAction)
}
SellRamAction::SellRamAction(const SellRamAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.account().empty()) {
    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  byte_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.byte().empty()) {
    byte_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.byte_);
  }
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.EOS.SellRamAction)
}

void SellRamAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SellRamAction_Jub_5fEOS_2eproto.base);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  byte_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SellRamAction::~SellRamAction() {
  // @@protoc_insertion_point(destructor:JUB.Proto.EOS.SellRamAction)
  SharedDtor();
}

void SellRamAction::SharedDtor() {
  account_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  byte_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SellRamAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SellRamAction& SellRamAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SellRamAction_Jub_5fEOS_2eproto.base);
  return *internal_default_instance();
}


void SellRamAction::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.EOS.SellRamAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  byte_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SellRamAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string account = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_account(), ptr, ctx, "JUB.Proto.EOS.SellRamAction.account");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string byte = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_byte(), ptr, ctx, "JUB.Proto.EOS.SellRamAction.byte");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SellRamAction::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:JUB.Proto.EOS.SellRamAction)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string account = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.SellRamAction.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string byte = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_byte()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->byte().data(), static_cast<int>(this->byte().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.SellRamAction.byte"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JUB.Proto.EOS.SellRamAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JUB.Proto.EOS.SellRamAction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SellRamAction::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JUB.Proto.EOS.SellRamAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.SellRamAction.account");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // string byte = 2;
  if (this->byte().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->byte().data(), static_cast<int>(this->byte().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.SellRamAction.byte");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->byte(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JUB.Proto.EOS.SellRamAction)
}

::PROTOBUF_NAMESPACE_ID::uint8* SellRamAction::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.EOS.SellRamAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.SellRamAction.account");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // string byte = 2;
  if (this->byte().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->byte().data(), static_cast<int>(this->byte().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.SellRamAction.byte");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->byte(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.EOS.SellRamAction)
  return target;
}

size_t SellRamAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.EOS.SellRamAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string byte = 2;
  if (this->byte().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->byte());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SellRamAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.EOS.SellRamAction)
  GOOGLE_DCHECK_NE(&from, this);
  const SellRamAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SellRamAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.EOS.SellRamAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.EOS.SellRamAction)
    MergeFrom(*source);
  }
}

void SellRamAction::MergeFrom(const SellRamAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.EOS.SellRamAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.byte().size() > 0) {

    byte_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.byte_);
  }
}

void SellRamAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.EOS.SellRamAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SellRamAction::CopyFrom(const SellRamAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.EOS.SellRamAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SellRamAction::IsInitialized() const {
  return true;
}

void SellRamAction::InternalSwap(SellRamAction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  account_.Swap(&other->account_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  byte_.Swap(&other->byte_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SellRamAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActionEOS::InitAsDefaultInstance() {
  ::JUB::Proto::EOS::_ActionEOS_default_instance_.xfer_action_ = const_cast< ::JUB::Proto::EOS::TransferAction*>(
      ::JUB::Proto::EOS::TransferAction::internal_default_instance());
  ::JUB::Proto::EOS::_ActionEOS_default_instance_.dele_action_ = const_cast< ::JUB::Proto::EOS::DelegateAction*>(
      ::JUB::Proto::EOS::DelegateAction::internal_default_instance());
  ::JUB::Proto::EOS::_ActionEOS_default_instance_.buy_ram_action_ = const_cast< ::JUB::Proto::EOS::BuyRamAction*>(
      ::JUB::Proto::EOS::BuyRamAction::internal_default_instance());
  ::JUB::Proto::EOS::_ActionEOS_default_instance_.sell_ram_action_ = const_cast< ::JUB::Proto::EOS::SellRamAction*>(
      ::JUB::Proto::EOS::SellRamAction::internal_default_instance());
}
class ActionEOS::_Internal {
 public:
  static const ::JUB::Proto::EOS::TransferAction& xfer_action(const ActionEOS* msg);
  static const ::JUB::Proto::EOS::DelegateAction& dele_action(const ActionEOS* msg);
  static const ::JUB::Proto::EOS::BuyRamAction& buy_ram_action(const ActionEOS* msg);
  static const ::JUB::Proto::EOS::SellRamAction& sell_ram_action(const ActionEOS* msg);
};

const ::JUB::Proto::EOS::TransferAction&
ActionEOS::_Internal::xfer_action(const ActionEOS* msg) {
  return *msg->action_.xfer_action_;
}
const ::JUB::Proto::EOS::DelegateAction&
ActionEOS::_Internal::dele_action(const ActionEOS* msg) {
  return *msg->action_.dele_action_;
}
const ::JUB::Proto::EOS::BuyRamAction&
ActionEOS::_Internal::buy_ram_action(const ActionEOS* msg) {
  return *msg->action_.buy_ram_action_;
}
const ::JUB::Proto::EOS::SellRamAction&
ActionEOS::_Internal::sell_ram_action(const ActionEOS* msg) {
  return *msg->action_.sell_ram_action_;
}
void ActionEOS::set_allocated_xfer_action(::JUB::Proto::EOS::TransferAction* xfer_action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_action();
  if (xfer_action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      xfer_action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, xfer_action, submessage_arena);
    }
    set_has_xfer_action();
    action_.xfer_action_ = xfer_action;
  }
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.EOS.ActionEOS.xfer_action)
}
void ActionEOS::set_allocated_dele_action(::JUB::Proto::EOS::DelegateAction* dele_action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_action();
  if (dele_action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dele_action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dele_action, submessage_arena);
    }
    set_has_dele_action();
    action_.dele_action_ = dele_action;
  }
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.EOS.ActionEOS.dele_action)
}
void ActionEOS::set_allocated_buy_ram_action(::JUB::Proto::EOS::BuyRamAction* buy_ram_action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_action();
  if (buy_ram_action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      buy_ram_action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, buy_ram_action, submessage_arena);
    }
    set_has_buy_ram_action();
    action_.buy_ram_action_ = buy_ram_action;
  }
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.EOS.ActionEOS.buy_ram_action)
}
void ActionEOS::set_allocated_sell_ram_action(::JUB::Proto::EOS::SellRamAction* sell_ram_action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_action();
  if (sell_ram_action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      sell_ram_action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sell_ram_action, submessage_arena);
    }
    set_has_sell_ram_action();
    action_.sell_ram_action_ = sell_ram_action;
  }
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.EOS.ActionEOS.sell_ram_action)
}
ActionEOS::ActionEOS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.EOS.ActionEOS)
}
ActionEOS::ActionEOS(const ActionEOS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.currency().empty()) {
    currency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_ = from.type_;
  clear_has_action();
  switch (from.action_case()) {
    case kXferAction: {
      mutable_xfer_action()->::JUB::Proto::EOS::TransferAction::MergeFrom(from.xfer_action());
      break;
    }
    case kDeleAction: {
      mutable_dele_action()->::JUB::Proto::EOS::DelegateAction::MergeFrom(from.dele_action());
      break;
    }
    case kBuyRamAction: {
      mutable_buy_ram_action()->::JUB::Proto::EOS::BuyRamAction::MergeFrom(from.buy_ram_action());
      break;
    }
    case kSellRamAction: {
      mutable_sell_ram_action()->::JUB::Proto::EOS::SellRamAction::MergeFrom(from.sell_ram_action());
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.EOS.ActionEOS)
}

void ActionEOS::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActionEOS_Jub_5fEOS_2eproto.base);
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  clear_has_action();
}

ActionEOS::~ActionEOS() {
  // @@protoc_insertion_point(destructor:JUB.Proto.EOS.ActionEOS)
  SharedDtor();
}

void ActionEOS::SharedDtor() {
  currency_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_action()) {
    clear_action();
  }
}

void ActionEOS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActionEOS& ActionEOS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActionEOS_Jub_5fEOS_2eproto.base);
  return *internal_default_instance();
}


void ActionEOS::clear_action() {
// @@protoc_insertion_point(one_of_clear_start:JUB.Proto.EOS.ActionEOS)
  switch (action_case()) {
    case kXferAction: {
      delete action_.xfer_action_;
      break;
    }
    case kDeleAction: {
      delete action_.dele_action_;
      break;
    }
    case kBuyRamAction: {
      delete action_.buy_ram_action_;
      break;
    }
    case kSellRamAction: {
      delete action_.sell_ram_action_;
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ACTION_NOT_SET;
}


void ActionEOS::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.EOS.ActionEOS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currency_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  clear_action();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ActionEOS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .JUB.Proto.EOS.ENUM_EOS_ACTION_TYPE type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_type(static_cast<::JUB::Proto::EOS::ENUM_EOS_ACTION_TYPE>(val));
        } else goto handle_unusual;
        continue;
      // string currency = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_currency(), ptr, ctx, "JUB.Proto.EOS.ActionEOS.currency");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "JUB.Proto.EOS.ActionEOS.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .JUB.Proto.EOS.TransferAction xfer_action = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_xfer_action(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .JUB.Proto.EOS.DelegateAction dele_action = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_dele_action(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .JUB.Proto.EOS.BuyRamAction buy_ram_action = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_buy_ram_action(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .JUB.Proto.EOS.SellRamAction sell_ram_action = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_sell_ram_action(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ActionEOS::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:JUB.Proto.EOS.ActionEOS)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .JUB.Proto.EOS.ENUM_EOS_ACTION_TYPE type = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::JUB::Proto::EOS::ENUM_EOS_ACTION_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string currency = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->currency().data(), static_cast<int>(this->currency().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.ActionEOS.currency"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.ActionEOS.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .JUB.Proto.EOS.TransferAction xfer_action = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_xfer_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .JUB.Proto.EOS.DelegateAction dele_action = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_dele_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .JUB.Proto.EOS.BuyRamAction buy_ram_action = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_buy_ram_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .JUB.Proto.EOS.SellRamAction sell_ram_action = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_sell_ram_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JUB.Proto.EOS.ActionEOS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JUB.Proto.EOS.ActionEOS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ActionEOS::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JUB.Proto.EOS.ActionEOS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .JUB.Proto.EOS.ENUM_EOS_ACTION_TYPE type = 1;
  if (this->type() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string currency = 2;
  if (this->currency().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), static_cast<int>(this->currency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.ActionEOS.currency");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->currency(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.ActionEOS.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // .JUB.Proto.EOS.TransferAction xfer_action = 4;
  if (has_xfer_action()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::xfer_action(this), output);
  }

  // .JUB.Proto.EOS.DelegateAction dele_action = 5;
  if (has_dele_action()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::dele_action(this), output);
  }

  // .JUB.Proto.EOS.BuyRamAction buy_ram_action = 6;
  if (has_buy_ram_action()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::buy_ram_action(this), output);
  }

  // .JUB.Proto.EOS.SellRamAction sell_ram_action = 7;
  if (has_sell_ram_action()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::sell_ram_action(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JUB.Proto.EOS.ActionEOS)
}

::PROTOBUF_NAMESPACE_ID::uint8* ActionEOS::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.EOS.ActionEOS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .JUB.Proto.EOS.ENUM_EOS_ACTION_TYPE type = 1;
  if (this->type() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string currency = 2;
  if (this->currency().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), static_cast<int>(this->currency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.ActionEOS.currency");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->currency(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.ActionEOS.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // .JUB.Proto.EOS.TransferAction xfer_action = 4;
  if (has_xfer_action()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::xfer_action(this), target);
  }

  // .JUB.Proto.EOS.DelegateAction dele_action = 5;
  if (has_dele_action()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::dele_action(this), target);
  }

  // .JUB.Proto.EOS.BuyRamAction buy_ram_action = 6;
  if (has_buy_ram_action()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::buy_ram_action(this), target);
  }

  // .JUB.Proto.EOS.SellRamAction sell_ram_action = 7;
  if (has_sell_ram_action()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::sell_ram_action(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.EOS.ActionEOS)
  return target;
}

size_t ActionEOS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.EOS.ActionEOS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string currency = 2;
  if (this->currency().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->currency());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .JUB.Proto.EOS.ENUM_EOS_ACTION_TYPE type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->type());
  }

  switch (action_case()) {
    // .JUB.Proto.EOS.TransferAction xfer_action = 4;
    case kXferAction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *action_.xfer_action_);
      break;
    }
    // .JUB.Proto.EOS.DelegateAction dele_action = 5;
    case kDeleAction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *action_.dele_action_);
      break;
    }
    // .JUB.Proto.EOS.BuyRamAction buy_ram_action = 6;
    case kBuyRamAction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *action_.buy_ram_action_);
      break;
    }
    // .JUB.Proto.EOS.SellRamAction sell_ram_action = 7;
    case kSellRamAction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *action_.sell_ram_action_);
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionEOS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.EOS.ActionEOS)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionEOS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActionEOS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.EOS.ActionEOS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.EOS.ActionEOS)
    MergeFrom(*source);
  }
}

void ActionEOS::MergeFrom(const ActionEOS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.EOS.ActionEOS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currency().size() > 0) {

    currency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  switch (from.action_case()) {
    case kXferAction: {
      mutable_xfer_action()->::JUB::Proto::EOS::TransferAction::MergeFrom(from.xfer_action());
      break;
    }
    case kDeleAction: {
      mutable_dele_action()->::JUB::Proto::EOS::DelegateAction::MergeFrom(from.dele_action());
      break;
    }
    case kBuyRamAction: {
      mutable_buy_ram_action()->::JUB::Proto::EOS::BuyRamAction::MergeFrom(from.buy_ram_action());
      break;
    }
    case kSellRamAction: {
      mutable_sell_ram_action()->::JUB::Proto::EOS::SellRamAction::MergeFrom(from.sell_ram_action());
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
}

void ActionEOS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.EOS.ActionEOS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionEOS::CopyFrom(const ActionEOS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.EOS.ActionEOS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionEOS::IsInitialized() const {
  return true;
}

void ActionEOS::InternalSwap(ActionEOS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  currency_.Swap(&other->currency_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(action_, other->action_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionEOS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActionListEOS::InitAsDefaultInstance() {
}
class ActionListEOS::_Internal {
 public:
};

ActionListEOS::ActionListEOS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.EOS.ActionListEOS)
}
ActionListEOS::ActionListEOS(const ActionListEOS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.EOS.ActionListEOS)
}

void ActionListEOS::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActionListEOS_Jub_5fEOS_2eproto.base);
}

ActionListEOS::~ActionListEOS() {
  // @@protoc_insertion_point(destructor:JUB.Proto.EOS.ActionListEOS)
  SharedDtor();
}

void ActionListEOS::SharedDtor() {
}

void ActionListEOS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActionListEOS& ActionListEOS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActionListEOS_Jub_5fEOS_2eproto.base);
  return *internal_default_instance();
}


void ActionListEOS::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.EOS.ActionListEOS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ActionListEOS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .JUB.Proto.EOS.ActionEOS actions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_actions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ActionListEOS::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:JUB.Proto.EOS.ActionListEOS)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .JUB.Proto.EOS.ActionEOS actions = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JUB.Proto.EOS.ActionListEOS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JUB.Proto.EOS.ActionListEOS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ActionListEOS::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JUB.Proto.EOS.ActionListEOS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .JUB.Proto.EOS.ActionEOS actions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->actions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JUB.Proto.EOS.ActionListEOS)
}

::PROTOBUF_NAMESPACE_ID::uint8* ActionListEOS::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.EOS.ActionListEOS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .JUB.Proto.EOS.ActionEOS actions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->actions(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.EOS.ActionListEOS)
  return target;
}

size_t ActionListEOS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.EOS.ActionListEOS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .JUB.Proto.EOS.ActionEOS actions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->actions(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionListEOS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.EOS.ActionListEOS)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionListEOS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActionListEOS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.EOS.ActionListEOS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.EOS.ActionListEOS)
    MergeFrom(*source);
  }
}

void ActionListEOS::MergeFrom(const ActionListEOS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.EOS.ActionListEOS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
}

void ActionListEOS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.EOS.ActionListEOS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionListEOS::CopyFrom(const ActionListEOS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.EOS.ActionListEOS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionListEOS::IsInitialized() const {
  return true;
}

void ActionListEOS::InternalSwap(ActionListEOS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&actions_)->InternalSwap(CastToBase(&other->actions_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionListEOS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TransactionEOS::InitAsDefaultInstance() {
  ::JUB::Proto::EOS::_TransactionEOS_default_instance_._instance.get_mutable()->path_ = const_cast< ::JUB::Proto::Common::Bip44Path*>(
      ::JUB::Proto::Common::Bip44Path::internal_default_instance());
}
class TransactionEOS::_Internal {
 public:
  static const ::JUB::Proto::Common::Bip44Path& path(const TransactionEOS* msg);
};

const ::JUB::Proto::Common::Bip44Path&
TransactionEOS::_Internal::path(const TransactionEOS* msg) {
  return *msg->path_;
}
void TransactionEOS::clear_path() {
  if (GetArenaNoVirtual() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
TransactionEOS::TransactionEOS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.EOS.TransactionEOS)
}
TransactionEOS::TransactionEOS(const TransactionEOS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.chainid().empty()) {
    chainid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.chainid_);
  }
  expiration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.expiration().empty()) {
    expiration_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.expiration_);
  }
  referenceblockid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.referenceblockid().empty()) {
    referenceblockid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.referenceblockid_);
  }
  referenceblocktime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.referenceblocktime().empty()) {
    referenceblocktime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.referenceblocktime_);
  }
  actionsinjson_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.actionsinjson().empty()) {
    actionsinjson_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.actionsinjson_);
  }
  if (from.has_path()) {
    path_ = new ::JUB::Proto::Common::Bip44Path(*from.path_);
  } else {
    path_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.EOS.TransactionEOS)
}

void TransactionEOS::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TransactionEOS_Jub_5fEOS_2eproto.base);
  chainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expiration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  referenceblockid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  referenceblocktime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actionsinjson_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_ = nullptr;
}

TransactionEOS::~TransactionEOS() {
  // @@protoc_insertion_point(destructor:JUB.Proto.EOS.TransactionEOS)
  SharedDtor();
}

void TransactionEOS::SharedDtor() {
  chainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expiration_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  referenceblockid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  referenceblocktime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actionsinjson_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete path_;
}

void TransactionEOS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransactionEOS& TransactionEOS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TransactionEOS_Jub_5fEOS_2eproto.base);
  return *internal_default_instance();
}


void TransactionEOS::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.EOS.TransactionEOS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chainid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expiration_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  referenceblockid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  referenceblocktime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actionsinjson_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransactionEOS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .JUB.Proto.Common.Bip44Path path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string chainID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_chainid(), ptr, ctx, "JUB.Proto.EOS.TransactionEOS.chainID");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string expiration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_expiration(), ptr, ctx, "JUB.Proto.EOS.TransactionEOS.expiration");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string referenceBlockId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_referenceblockid(), ptr, ctx, "JUB.Proto.EOS.TransactionEOS.referenceBlockId");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string referenceBlockTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_referenceblocktime(), ptr, ctx, "JUB.Proto.EOS.TransactionEOS.referenceBlockTime");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string actionsInJSON = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_actionsinjson(), ptr, ctx, "JUB.Proto.EOS.TransactionEOS.actionsInJSON");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransactionEOS::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:JUB.Proto.EOS.TransactionEOS)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .JUB.Proto.Common.Bip44Path path = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string chainID = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_chainid()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->chainid().data(), static_cast<int>(this->chainid().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.TransactionEOS.chainID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string expiration = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_expiration()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->expiration().data(), static_cast<int>(this->expiration().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.TransactionEOS.expiration"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string referenceBlockId = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_referenceblockid()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->referenceblockid().data(), static_cast<int>(this->referenceblockid().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.TransactionEOS.referenceBlockId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string referenceBlockTime = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_referenceblocktime()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->referenceblocktime().data(), static_cast<int>(this->referenceblocktime().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.TransactionEOS.referenceBlockTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string actionsInJSON = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_actionsinjson()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->actionsinjson().data(), static_cast<int>(this->actionsinjson().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.EOS.TransactionEOS.actionsInJSON"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JUB.Proto.EOS.TransactionEOS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JUB.Proto.EOS.TransactionEOS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransactionEOS::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JUB.Proto.EOS.TransactionEOS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .JUB.Proto.Common.Bip44Path path = 1;
  if (this->has_path()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::path(this), output);
  }

  // string chainID = 2;
  if (this->chainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->chainid().data(), static_cast<int>(this->chainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransactionEOS.chainID");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chainid(), output);
  }

  // string expiration = 3;
  if (this->expiration().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->expiration().data(), static_cast<int>(this->expiration().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransactionEOS.expiration");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->expiration(), output);
  }

  // string referenceBlockId = 4;
  if (this->referenceblockid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->referenceblockid().data(), static_cast<int>(this->referenceblockid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransactionEOS.referenceBlockId");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->referenceblockid(), output);
  }

  // string referenceBlockTime = 5;
  if (this->referenceblocktime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->referenceblocktime().data(), static_cast<int>(this->referenceblocktime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransactionEOS.referenceBlockTime");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->referenceblocktime(), output);
  }

  // string actionsInJSON = 6;
  if (this->actionsinjson().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->actionsinjson().data(), static_cast<int>(this->actionsinjson().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransactionEOS.actionsInJSON");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->actionsinjson(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JUB.Proto.EOS.TransactionEOS)
}

::PROTOBUF_NAMESPACE_ID::uint8* TransactionEOS::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.EOS.TransactionEOS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .JUB.Proto.Common.Bip44Path path = 1;
  if (this->has_path()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::path(this), target);
  }

  // string chainID = 2;
  if (this->chainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->chainid().data(), static_cast<int>(this->chainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransactionEOS.chainID");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->chainid(), target);
  }

  // string expiration = 3;
  if (this->expiration().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->expiration().data(), static_cast<int>(this->expiration().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransactionEOS.expiration");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->expiration(), target);
  }

  // string referenceBlockId = 4;
  if (this->referenceblockid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->referenceblockid().data(), static_cast<int>(this->referenceblockid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransactionEOS.referenceBlockId");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->referenceblockid(), target);
  }

  // string referenceBlockTime = 5;
  if (this->referenceblocktime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->referenceblocktime().data(), static_cast<int>(this->referenceblocktime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransactionEOS.referenceBlockTime");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->referenceblocktime(), target);
  }

  // string actionsInJSON = 6;
  if (this->actionsinjson().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->actionsinjson().data(), static_cast<int>(this->actionsinjson().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransactionEOS.actionsInJSON");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        6, this->actionsinjson(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.EOS.TransactionEOS)
  return target;
}

size_t TransactionEOS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.EOS.TransactionEOS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string chainID = 2;
  if (this->chainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->chainid());
  }

  // string expiration = 3;
  if (this->expiration().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->expiration());
  }

  // string referenceBlockId = 4;
  if (this->referenceblockid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->referenceblockid());
  }

  // string referenceBlockTime = 5;
  if (this->referenceblocktime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->referenceblocktime());
  }

  // string actionsInJSON = 6;
  if (this->actionsinjson().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->actionsinjson());
  }

  // .JUB.Proto.Common.Bip44Path path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionEOS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.EOS.TransactionEOS)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionEOS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransactionEOS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.EOS.TransactionEOS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.EOS.TransactionEOS)
    MergeFrom(*source);
  }
}

void TransactionEOS::MergeFrom(const TransactionEOS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.EOS.TransactionEOS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chainid().size() > 0) {

    chainid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.chainid_);
  }
  if (from.expiration().size() > 0) {

    expiration_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.expiration_);
  }
  if (from.referenceblockid().size() > 0) {

    referenceblockid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.referenceblockid_);
  }
  if (from.referenceblocktime().size() > 0) {

    referenceblocktime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.referenceblocktime_);
  }
  if (from.actionsinjson().size() > 0) {

    actionsinjson_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.actionsinjson_);
  }
  if (from.has_path()) {
    mutable_path()->::JUB::Proto::Common::Bip44Path::MergeFrom(from.path());
  }
}

void TransactionEOS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.EOS.TransactionEOS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionEOS::CopyFrom(const TransactionEOS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.EOS.TransactionEOS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionEOS::IsInitialized() const {
  return true;
}

void TransactionEOS::InternalSwap(TransactionEOS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  chainid_.Swap(&other->chainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  expiration_.Swap(&other->expiration_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  referenceblockid_.Swap(&other->referenceblockid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  referenceblocktime_.Swap(&other->referenceblocktime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  actionsinjson_.Swap(&other->actionsinjson_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(path_, other->path_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionEOS::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace EOS
}  // namespace Proto
}  // namespace JUB
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::JUB::Proto::EOS::TransferAction* Arena::CreateMaybeMessage< ::JUB::Proto::EOS::TransferAction >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::EOS::TransferAction >(arena);
}
template<> PROTOBUF_NOINLINE ::JUB::Proto::EOS::DelegateAction* Arena::CreateMaybeMessage< ::JUB::Proto::EOS::DelegateAction >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::EOS::DelegateAction >(arena);
}
template<> PROTOBUF_NOINLINE ::JUB::Proto::EOS::BuyRamAction* Arena::CreateMaybeMessage< ::JUB::Proto::EOS::BuyRamAction >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::EOS::BuyRamAction >(arena);
}
template<> PROTOBUF_NOINLINE ::JUB::Proto::EOS::SellRamAction* Arena::CreateMaybeMessage< ::JUB::Proto::EOS::SellRamAction >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::EOS::SellRamAction >(arena);
}
template<> PROTOBUF_NOINLINE ::JUB::Proto::EOS::ActionEOS* Arena::CreateMaybeMessage< ::JUB::Proto::EOS::ActionEOS >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::EOS::ActionEOS >(arena);
}
template<> PROTOBUF_NOINLINE ::JUB::Proto::EOS::ActionListEOS* Arena::CreateMaybeMessage< ::JUB::Proto::EOS::ActionListEOS >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::EOS::ActionListEOS >(arena);
}
template<> PROTOBUF_NOINLINE ::JUB::Proto::EOS::TransactionEOS* Arena::CreateMaybeMessage< ::JUB::Proto::EOS::TransactionEOS >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::EOS::TransactionEOS >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
