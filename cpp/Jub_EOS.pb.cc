// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Jub_EOS.proto

#include "Jub_EOS.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fEOS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuyRamAction_Jub_5fEOS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fEOS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DelegateAction_Jub_5fEOS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fEOS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SellRamAction_Jub_5fEOS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fEOS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TransferAction_Jub_5fEOS_2eproto;
namespace JUB {
namespace Proto {
namespace EOS {
class TransferActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TransferAction> _instance;
} _TransferAction_default_instance_;
class DelegateActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DelegateAction> _instance;
} _DelegateAction_default_instance_;
class BuyRamActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BuyRamAction> _instance;
} _BuyRamAction_default_instance_;
class SellRamActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SellRamAction> _instance;
} _SellRamAction_default_instance_;
class ActionEOSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActionEOS> _instance;
  const ::JUB::Proto::EOS::TransferAction* xfer_action_;
  const ::JUB::Proto::EOS::DelegateAction* dele_action_;
  const ::JUB::Proto::EOS::BuyRamAction* buy_ram_action_;
  const ::JUB::Proto::EOS::SellRamAction* sell_ram_action_;
} _ActionEOS_default_instance_;
}  // namespace EOS
}  // namespace Proto
}  // namespace JUB
static void InitDefaultsscc_info_ActionEOS_Jub_5fEOS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::EOS::_ActionEOS_default_instance_;
    new (ptr) ::JUB::Proto::EOS::ActionEOS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::EOS::ActionEOS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ActionEOS_Jub_5fEOS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_ActionEOS_Jub_5fEOS_2eproto}, {
      &scc_info_TransferAction_Jub_5fEOS_2eproto.base,
      &scc_info_DelegateAction_Jub_5fEOS_2eproto.base,
      &scc_info_BuyRamAction_Jub_5fEOS_2eproto.base,
      &scc_info_SellRamAction_Jub_5fEOS_2eproto.base,}};

static void InitDefaultsscc_info_BuyRamAction_Jub_5fEOS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::EOS::_BuyRamAction_default_instance_;
    new (ptr) ::JUB::Proto::EOS::BuyRamAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::EOS::BuyRamAction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuyRamAction_Jub_5fEOS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BuyRamAction_Jub_5fEOS_2eproto}, {}};

static void InitDefaultsscc_info_DelegateAction_Jub_5fEOS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::EOS::_DelegateAction_default_instance_;
    new (ptr) ::JUB::Proto::EOS::DelegateAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::EOS::DelegateAction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DelegateAction_Jub_5fEOS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DelegateAction_Jub_5fEOS_2eproto}, {}};

static void InitDefaultsscc_info_SellRamAction_Jub_5fEOS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::EOS::_SellRamAction_default_instance_;
    new (ptr) ::JUB::Proto::EOS::SellRamAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::EOS::SellRamAction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SellRamAction_Jub_5fEOS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SellRamAction_Jub_5fEOS_2eproto}, {}};

static void InitDefaultsscc_info_TransferAction_Jub_5fEOS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::EOS::_TransferAction_default_instance_;
    new (ptr) ::JUB::Proto::EOS::TransferAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::EOS::TransferAction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TransferAction_Jub_5fEOS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TransferAction_Jub_5fEOS_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Jub_5fEOS_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Jub_5fEOS_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Jub_5fEOS_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Jub_5fEOS_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransferAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransferAction, from_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransferAction, to_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransferAction, asset_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::TransferAction, memo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::DelegateAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::DelegateAction, from_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::DelegateAction, receiver_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::DelegateAction, net_qty_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::DelegateAction, cpu_qty_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::DelegateAction, stake_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::BuyRamAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::BuyRamAction, payer_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::BuyRamAction, quant_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::BuyRamAction, receiver_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::SellRamAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::SellRamAction, account_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::SellRamAction, byte_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionEOS, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionEOS, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionEOS, type_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionEOS, currency_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionEOS, name_),
  offsetof(::JUB::Proto::EOS::ActionEOSDefaultTypeInternal, xfer_action_),
  offsetof(::JUB::Proto::EOS::ActionEOSDefaultTypeInternal, dele_action_),
  offsetof(::JUB::Proto::EOS::ActionEOSDefaultTypeInternal, buy_ram_action_),
  offsetof(::JUB::Proto::EOS::ActionEOSDefaultTypeInternal, sell_ram_action_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::EOS::ActionEOS, action_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::JUB::Proto::EOS::TransferAction)},
  { 9, -1, sizeof(::JUB::Proto::EOS::DelegateAction)},
  { 19, -1, sizeof(::JUB::Proto::EOS::BuyRamAction)},
  { 27, -1, sizeof(::JUB::Proto::EOS::SellRamAction)},
  { 34, -1, sizeof(::JUB::Proto::EOS::ActionEOS)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::EOS::_TransferAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::EOS::_DelegateAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::EOS::_BuyRamAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::EOS::_SellRamAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::EOS::_ActionEOS_default_instance_),
};

const char descriptor_table_protodef_Jub_5fEOS_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rJub_EOS.proto\022\rJUB.Proto.EOS\"G\n\016Transf"
  "erAction\022\014\n\004from\030\001 \001(\t\022\n\n\002to\030\002 \001(\t\022\r\n\005as"
  "set\030\003 \001(\t\022\014\n\004memo\030\004 \001(\t\"a\n\016DelegateActio"
  "n\022\014\n\004from\030\001 \001(\t\022\020\n\010receiver\030\002 \001(\t\022\017\n\007net"
  "_qty\030\003 \001(\t\022\017\n\007cpu_qty\030\004 \001(\t\022\r\n\005stake\030\005 \001"
  "(\010\">\n\014BuyRamAction\022\r\n\005payer\030\001 \001(\t\022\r\n\005qua"
  "nt\030\002 \001(\t\022\020\n\010receiver\030\003 \001(\t\".\n\rSellRamAct"
  "ion\022\017\n\007account\030\001 \001(\t\022\014\n\004byte\030\002 \001(\t\"\304\002\n\tA"
  "ctionEOS\0221\n\004type\030\001 \001(\0162#.JUB.Proto.EOS.E"
  "NUM_EOS_ACTION_TYPE\022\020\n\010currency\030\002 \001(\t\022\014\n"
  "\004name\030\003 \001(\t\0224\n\013xfer_action\030\004 \001(\0132\035.JUB.P"
  "roto.EOS.TransferActionH\000\0224\n\013dele_action"
  "\030\005 \001(\0132\035.JUB.Proto.EOS.DelegateActionH\000\022"
  "5\n\016buy_ram_action\030\006 \001(\0132\033.JUB.Proto.EOS."
  "BuyRamActionH\000\0227\n\017sell_ram_action\030\007 \001(\0132"
  "\034.JUB.Proto.EOS.SellRamActionH\000B\010\n\006actio"
  "n*O\n\024ENUM_EOS_ACTION_TYPE\022\010\n\004XFER\020\000\022\010\n\004D"
  "ELE\020\001\022\n\n\006UNDELE\020\002\022\n\n\006BUYRAM\020\003\022\013\n\007SELLRAM"
  "\020\004B.\n\025com.jubiter.sdk.protoB\tEOSProtos\242\002"
  "\tEOSProtosb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Jub_5fEOS_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Jub_5fEOS_2eproto_sccs[5] = {
  &scc_info_ActionEOS_Jub_5fEOS_2eproto.base,
  &scc_info_BuyRamAction_Jub_5fEOS_2eproto.base,
  &scc_info_DelegateAction_Jub_5fEOS_2eproto.base,
  &scc_info_SellRamAction_Jub_5fEOS_2eproto.base,
  &scc_info_TransferAction_Jub_5fEOS_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Jub_5fEOS_2eproto_once;
static bool descriptor_table_Jub_5fEOS_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Jub_5fEOS_2eproto = {
  &descriptor_table_Jub_5fEOS_2eproto_initialized, descriptor_table_protodef_Jub_5fEOS_2eproto, "Jub_EOS.proto", 778,
  &descriptor_table_Jub_5fEOS_2eproto_once, descriptor_table_Jub_5fEOS_2eproto_sccs, descriptor_table_Jub_5fEOS_2eproto_deps, 5, 0,
  schemas, file_default_instances, TableStruct_Jub_5fEOS_2eproto::offsets,
  file_level_metadata_Jub_5fEOS_2eproto, 5, file_level_enum_descriptors_Jub_5fEOS_2eproto, file_level_service_descriptors_Jub_5fEOS_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Jub_5fEOS_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Jub_5fEOS_2eproto), true);
namespace JUB {
namespace Proto {
namespace EOS {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ENUM_EOS_ACTION_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Jub_5fEOS_2eproto);
  return file_level_enum_descriptors_Jub_5fEOS_2eproto[0];
}
bool ENUM_EOS_ACTION_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TransferAction::InitAsDefaultInstance() {
}
class TransferAction::_Internal {
 public:
};

TransferAction::TransferAction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.EOS.TransferAction)
}
TransferAction::TransferAction(const TransferAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_from().empty()) {
    from_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  to_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_to().empty()) {
    to_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  asset_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_asset().empty()) {
    asset_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.asset_);
  }
  memo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_memo().empty()) {
    memo_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.EOS.TransferAction)
}

void TransferAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TransferAction_Jub_5fEOS_2eproto.base);
  from_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  asset_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  memo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TransferAction::~TransferAction() {
  // @@protoc_insertion_point(destructor:JUB.Proto.EOS.TransferAction)
  SharedDtor();
}

void TransferAction::SharedDtor() {
  from_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  asset_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  memo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TransferAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransferAction& TransferAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TransferAction_Jub_5fEOS_2eproto.base);
  return *internal_default_instance();
}


void TransferAction::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.EOS.TransferAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  asset_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  memo_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* TransferAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_from();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.TransferAction.from"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_to();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.TransferAction.to"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string asset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_asset();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.TransferAction.asset"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string memo = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_memo();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.TransferAction.memo"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TransferAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.EOS.TransferAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_from().data(), static_cast<int>(this->_internal_from().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransferAction.from");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_from(), target);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_to().data(), static_cast<int>(this->_internal_to().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransferAction.to");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_to(), target);
  }

  // string asset = 3;
  if (this->asset().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_asset().data(), static_cast<int>(this->_internal_asset().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransferAction.asset");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_asset(), target);
  }

  // string memo = 4;
  if (this->memo().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_memo().data(), static_cast<int>(this->_internal_memo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.TransferAction.memo");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_memo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.EOS.TransferAction)
  return target;
}

size_t TransferAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.EOS.TransferAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_from());
  }

  // string to = 2;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_to());
  }

  // string asset = 3;
  if (this->asset().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_asset());
  }

  // string memo = 4;
  if (this->memo().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_memo());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.EOS.TransferAction)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransferAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.EOS.TransferAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.EOS.TransferAction)
    MergeFrom(*source);
  }
}

void TransferAction::MergeFrom(const TransferAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.EOS.TransferAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.asset().size() > 0) {

    asset_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.asset_);
  }
  if (from.memo().size() > 0) {

    memo_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
}

void TransferAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.EOS.TransferAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferAction::CopyFrom(const TransferAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.EOS.TransferAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferAction::IsInitialized() const {
  return true;
}

void TransferAction::InternalSwap(TransferAction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  from_.Swap(&other->from_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  asset_.Swap(&other->asset_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  memo_.Swap(&other->memo_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata TransferAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DelegateAction::InitAsDefaultInstance() {
}
class DelegateAction::_Internal {
 public:
};

DelegateAction::DelegateAction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.EOS.DelegateAction)
}
DelegateAction::DelegateAction(const DelegateAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_from().empty()) {
    from_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_receiver().empty()) {
    receiver_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  net_qty_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_net_qty().empty()) {
    net_qty_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.net_qty_);
  }
  cpu_qty_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cpu_qty().empty()) {
    cpu_qty_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cpu_qty_);
  }
  stake_ = from.stake_;
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.EOS.DelegateAction)
}

void DelegateAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DelegateAction_Jub_5fEOS_2eproto.base);
  from_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  net_qty_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cpu_qty_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  stake_ = false;
}

DelegateAction::~DelegateAction() {
  // @@protoc_insertion_point(destructor:JUB.Proto.EOS.DelegateAction)
  SharedDtor();
}

void DelegateAction::SharedDtor() {
  from_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  net_qty_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cpu_qty_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DelegateAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DelegateAction& DelegateAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DelegateAction_Jub_5fEOS_2eproto.base);
  return *internal_default_instance();
}


void DelegateAction::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.EOS.DelegateAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  net_qty_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cpu_qty_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  stake_ = false;
  _internal_metadata_.Clear();
}

const char* DelegateAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_from();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.DelegateAction.from"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string receiver = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_receiver();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.DelegateAction.receiver"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string net_qty = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_net_qty();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.DelegateAction.net_qty"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cpu_qty = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_cpu_qty();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.DelegateAction.cpu_qty"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool stake = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          stake_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DelegateAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.EOS.DelegateAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_from().data(), static_cast<int>(this->_internal_from().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.DelegateAction.from");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_from(), target);
  }

  // string receiver = 2;
  if (this->receiver().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receiver().data(), static_cast<int>(this->_internal_receiver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.DelegateAction.receiver");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_receiver(), target);
  }

  // string net_qty = 3;
  if (this->net_qty().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_net_qty().data(), static_cast<int>(this->_internal_net_qty().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.DelegateAction.net_qty");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_net_qty(), target);
  }

  // string cpu_qty = 4;
  if (this->cpu_qty().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cpu_qty().data(), static_cast<int>(this->_internal_cpu_qty().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.DelegateAction.cpu_qty");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_cpu_qty(), target);
  }

  // bool stake = 5;
  if (this->stake() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_stake(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.EOS.DelegateAction)
  return target;
}

size_t DelegateAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.EOS.DelegateAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_from());
  }

  // string receiver = 2;
  if (this->receiver().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receiver());
  }

  // string net_qty = 3;
  if (this->net_qty().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_net_qty());
  }

  // string cpu_qty = 4;
  if (this->cpu_qty().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cpu_qty());
  }

  // bool stake = 5;
  if (this->stake() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DelegateAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.EOS.DelegateAction)
  GOOGLE_DCHECK_NE(&from, this);
  const DelegateAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DelegateAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.EOS.DelegateAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.EOS.DelegateAction)
    MergeFrom(*source);
  }
}

void DelegateAction::MergeFrom(const DelegateAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.EOS.DelegateAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.receiver().size() > 0) {

    receiver_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  if (from.net_qty().size() > 0) {

    net_qty_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.net_qty_);
  }
  if (from.cpu_qty().size() > 0) {

    cpu_qty_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cpu_qty_);
  }
  if (from.stake() != 0) {
    _internal_set_stake(from._internal_stake());
  }
}

void DelegateAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.EOS.DelegateAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelegateAction::CopyFrom(const DelegateAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.EOS.DelegateAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelegateAction::IsInitialized() const {
  return true;
}

void DelegateAction::InternalSwap(DelegateAction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  from_.Swap(&other->from_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  receiver_.Swap(&other->receiver_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  net_qty_.Swap(&other->net_qty_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cpu_qty_.Swap(&other->cpu_qty_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stake_, other->stake_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DelegateAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BuyRamAction::InitAsDefaultInstance() {
}
class BuyRamAction::_Internal {
 public:
};

BuyRamAction::BuyRamAction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.EOS.BuyRamAction)
}
BuyRamAction::BuyRamAction(const BuyRamAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payer().empty()) {
    payer_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payer_);
  }
  quant_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_quant().empty()) {
    quant_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.quant_);
  }
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_receiver().empty()) {
    receiver_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.EOS.BuyRamAction)
}

void BuyRamAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BuyRamAction_Jub_5fEOS_2eproto.base);
  payer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  quant_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BuyRamAction::~BuyRamAction() {
  // @@protoc_insertion_point(destructor:JUB.Proto.EOS.BuyRamAction)
  SharedDtor();
}

void BuyRamAction::SharedDtor() {
  payer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  quant_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BuyRamAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuyRamAction& BuyRamAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BuyRamAction_Jub_5fEOS_2eproto.base);
  return *internal_default_instance();
}


void BuyRamAction::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.EOS.BuyRamAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payer_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  quant_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receiver_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* BuyRamAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string payer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_payer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.BuyRamAction.payer"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string quant = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_quant();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.BuyRamAction.quant"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string receiver = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_receiver();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.BuyRamAction.receiver"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BuyRamAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.EOS.BuyRamAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string payer = 1;
  if (this->payer().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payer().data(), static_cast<int>(this->_internal_payer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.BuyRamAction.payer");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_payer(), target);
  }

  // string quant = 2;
  if (this->quant().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_quant().data(), static_cast<int>(this->_internal_quant().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.BuyRamAction.quant");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_quant(), target);
  }

  // string receiver = 3;
  if (this->receiver().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receiver().data(), static_cast<int>(this->_internal_receiver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.BuyRamAction.receiver");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_receiver(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.EOS.BuyRamAction)
  return target;
}

size_t BuyRamAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.EOS.BuyRamAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payer = 1;
  if (this->payer().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payer());
  }

  // string quant = 2;
  if (this->quant().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_quant());
  }

  // string receiver = 3;
  if (this->receiver().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receiver());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuyRamAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.EOS.BuyRamAction)
  GOOGLE_DCHECK_NE(&from, this);
  const BuyRamAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuyRamAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.EOS.BuyRamAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.EOS.BuyRamAction)
    MergeFrom(*source);
  }
}

void BuyRamAction::MergeFrom(const BuyRamAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.EOS.BuyRamAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payer().size() > 0) {

    payer_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payer_);
  }
  if (from.quant().size() > 0) {

    quant_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.quant_);
  }
  if (from.receiver().size() > 0) {

    receiver_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
}

void BuyRamAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.EOS.BuyRamAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyRamAction::CopyFrom(const BuyRamAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.EOS.BuyRamAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyRamAction::IsInitialized() const {
  return true;
}

void BuyRamAction::InternalSwap(BuyRamAction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  payer_.Swap(&other->payer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  quant_.Swap(&other->quant_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  receiver_.Swap(&other->receiver_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata BuyRamAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SellRamAction::InitAsDefaultInstance() {
}
class SellRamAction::_Internal {
 public:
};

SellRamAction::SellRamAction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.EOS.SellRamAction)
}
SellRamAction::SellRamAction(const SellRamAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_account().empty()) {
    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  byte_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_byte().empty()) {
    byte_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.byte_);
  }
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.EOS.SellRamAction)
}

void SellRamAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SellRamAction_Jub_5fEOS_2eproto.base);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  byte_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SellRamAction::~SellRamAction() {
  // @@protoc_insertion_point(destructor:JUB.Proto.EOS.SellRamAction)
  SharedDtor();
}

void SellRamAction::SharedDtor() {
  account_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  byte_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SellRamAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SellRamAction& SellRamAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SellRamAction_Jub_5fEOS_2eproto.base);
  return *internal_default_instance();
}


void SellRamAction::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.EOS.SellRamAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  byte_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* SellRamAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string account = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_account();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.SellRamAction.account"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string byte = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_byte();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.SellRamAction.byte"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SellRamAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.EOS.SellRamAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account().data(), static_cast<int>(this->_internal_account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.SellRamAction.account");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_account(), target);
  }

  // string byte = 2;
  if (this->byte().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_byte().data(), static_cast<int>(this->_internal_byte().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.SellRamAction.byte");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_byte(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.EOS.SellRamAction)
  return target;
}

size_t SellRamAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.EOS.SellRamAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account());
  }

  // string byte = 2;
  if (this->byte().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_byte());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SellRamAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.EOS.SellRamAction)
  GOOGLE_DCHECK_NE(&from, this);
  const SellRamAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SellRamAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.EOS.SellRamAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.EOS.SellRamAction)
    MergeFrom(*source);
  }
}

void SellRamAction::MergeFrom(const SellRamAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.EOS.SellRamAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.byte().size() > 0) {

    byte_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.byte_);
  }
}

void SellRamAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.EOS.SellRamAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SellRamAction::CopyFrom(const SellRamAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.EOS.SellRamAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SellRamAction::IsInitialized() const {
  return true;
}

void SellRamAction::InternalSwap(SellRamAction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  account_.Swap(&other->account_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  byte_.Swap(&other->byte_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SellRamAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActionEOS::InitAsDefaultInstance() {
  ::JUB::Proto::EOS::_ActionEOS_default_instance_.xfer_action_ = const_cast< ::JUB::Proto::EOS::TransferAction*>(
      ::JUB::Proto::EOS::TransferAction::internal_default_instance());
  ::JUB::Proto::EOS::_ActionEOS_default_instance_.dele_action_ = const_cast< ::JUB::Proto::EOS::DelegateAction*>(
      ::JUB::Proto::EOS::DelegateAction::internal_default_instance());
  ::JUB::Proto::EOS::_ActionEOS_default_instance_.buy_ram_action_ = const_cast< ::JUB::Proto::EOS::BuyRamAction*>(
      ::JUB::Proto::EOS::BuyRamAction::internal_default_instance());
  ::JUB::Proto::EOS::_ActionEOS_default_instance_.sell_ram_action_ = const_cast< ::JUB::Proto::EOS::SellRamAction*>(
      ::JUB::Proto::EOS::SellRamAction::internal_default_instance());
}
class ActionEOS::_Internal {
 public:
  static const ::JUB::Proto::EOS::TransferAction& xfer_action(const ActionEOS* msg);
  static const ::JUB::Proto::EOS::DelegateAction& dele_action(const ActionEOS* msg);
  static const ::JUB::Proto::EOS::BuyRamAction& buy_ram_action(const ActionEOS* msg);
  static const ::JUB::Proto::EOS::SellRamAction& sell_ram_action(const ActionEOS* msg);
};

const ::JUB::Proto::EOS::TransferAction&
ActionEOS::_Internal::xfer_action(const ActionEOS* msg) {
  return *msg->action_.xfer_action_;
}
const ::JUB::Proto::EOS::DelegateAction&
ActionEOS::_Internal::dele_action(const ActionEOS* msg) {
  return *msg->action_.dele_action_;
}
const ::JUB::Proto::EOS::BuyRamAction&
ActionEOS::_Internal::buy_ram_action(const ActionEOS* msg) {
  return *msg->action_.buy_ram_action_;
}
const ::JUB::Proto::EOS::SellRamAction&
ActionEOS::_Internal::sell_ram_action(const ActionEOS* msg) {
  return *msg->action_.sell_ram_action_;
}
void ActionEOS::set_allocated_xfer_action(::JUB::Proto::EOS::TransferAction* xfer_action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_action();
  if (xfer_action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      xfer_action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, xfer_action, submessage_arena);
    }
    set_has_xfer_action();
    action_.xfer_action_ = xfer_action;
  }
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.EOS.ActionEOS.xfer_action)
}
void ActionEOS::set_allocated_dele_action(::JUB::Proto::EOS::DelegateAction* dele_action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_action();
  if (dele_action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dele_action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dele_action, submessage_arena);
    }
    set_has_dele_action();
    action_.dele_action_ = dele_action;
  }
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.EOS.ActionEOS.dele_action)
}
void ActionEOS::set_allocated_buy_ram_action(::JUB::Proto::EOS::BuyRamAction* buy_ram_action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_action();
  if (buy_ram_action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      buy_ram_action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, buy_ram_action, submessage_arena);
    }
    set_has_buy_ram_action();
    action_.buy_ram_action_ = buy_ram_action;
  }
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.EOS.ActionEOS.buy_ram_action)
}
void ActionEOS::set_allocated_sell_ram_action(::JUB::Proto::EOS::SellRamAction* sell_ram_action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_action();
  if (sell_ram_action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      sell_ram_action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sell_ram_action, submessage_arena);
    }
    set_has_sell_ram_action();
    action_.sell_ram_action_ = sell_ram_action;
  }
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.EOS.ActionEOS.sell_ram_action)
}
ActionEOS::ActionEOS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.EOS.ActionEOS)
}
ActionEOS::ActionEOS(const ActionEOS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currency().empty()) {
    currency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_ = from.type_;
  clear_has_action();
  switch (from.action_case()) {
    case kXferAction: {
      _internal_mutable_xfer_action()->::JUB::Proto::EOS::TransferAction::MergeFrom(from._internal_xfer_action());
      break;
    }
    case kDeleAction: {
      _internal_mutable_dele_action()->::JUB::Proto::EOS::DelegateAction::MergeFrom(from._internal_dele_action());
      break;
    }
    case kBuyRamAction: {
      _internal_mutable_buy_ram_action()->::JUB::Proto::EOS::BuyRamAction::MergeFrom(from._internal_buy_ram_action());
      break;
    }
    case kSellRamAction: {
      _internal_mutable_sell_ram_action()->::JUB::Proto::EOS::SellRamAction::MergeFrom(from._internal_sell_ram_action());
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.EOS.ActionEOS)
}

void ActionEOS::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActionEOS_Jub_5fEOS_2eproto.base);
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  clear_has_action();
}

ActionEOS::~ActionEOS() {
  // @@protoc_insertion_point(destructor:JUB.Proto.EOS.ActionEOS)
  SharedDtor();
}

void ActionEOS::SharedDtor() {
  currency_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_action()) {
    clear_action();
  }
}

void ActionEOS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActionEOS& ActionEOS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActionEOS_Jub_5fEOS_2eproto.base);
  return *internal_default_instance();
}


void ActionEOS::clear_action() {
// @@protoc_insertion_point(one_of_clear_start:JUB.Proto.EOS.ActionEOS)
  switch (action_case()) {
    case kXferAction: {
      delete action_.xfer_action_;
      break;
    }
    case kDeleAction: {
      delete action_.dele_action_;
      break;
    }
    case kBuyRamAction: {
      delete action_.buy_ram_action_;
      break;
    }
    case kSellRamAction: {
      delete action_.sell_ram_action_;
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ACTION_NOT_SET;
}


void ActionEOS::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.EOS.ActionEOS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currency_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  clear_action();
  _internal_metadata_.Clear();
}

const char* ActionEOS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .JUB.Proto.EOS.ENUM_EOS_ACTION_TYPE type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::JUB::Proto::EOS::ENUM_EOS_ACTION_TYPE>(val));
        } else goto handle_unusual;
        continue;
      // string currency = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_currency();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.ActionEOS.currency"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "JUB.Proto.EOS.ActionEOS.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .JUB.Proto.EOS.TransferAction xfer_action = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_xfer_action(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .JUB.Proto.EOS.DelegateAction dele_action = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_dele_action(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .JUB.Proto.EOS.BuyRamAction buy_ram_action = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_buy_ram_action(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .JUB.Proto.EOS.SellRamAction sell_ram_action = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_sell_ram_action(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActionEOS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.EOS.ActionEOS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .JUB.Proto.EOS.ENUM_EOS_ACTION_TYPE type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // string currency = 2;
  if (this->currency().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currency().data(), static_cast<int>(this->_internal_currency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.ActionEOS.currency");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_currency(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.EOS.ActionEOS.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // .JUB.Proto.EOS.TransferAction xfer_action = 4;
  if (_internal_has_xfer_action()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::xfer_action(this), target, stream);
  }

  // .JUB.Proto.EOS.DelegateAction dele_action = 5;
  if (_internal_has_dele_action()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::dele_action(this), target, stream);
  }

  // .JUB.Proto.EOS.BuyRamAction buy_ram_action = 6;
  if (_internal_has_buy_ram_action()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::buy_ram_action(this), target, stream);
  }

  // .JUB.Proto.EOS.SellRamAction sell_ram_action = 7;
  if (_internal_has_sell_ram_action()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::sell_ram_action(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.EOS.ActionEOS)
  return target;
}

size_t ActionEOS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.EOS.ActionEOS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string currency = 2;
  if (this->currency().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currency());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .JUB.Proto.EOS.ENUM_EOS_ACTION_TYPE type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (action_case()) {
    // .JUB.Proto.EOS.TransferAction xfer_action = 4;
    case kXferAction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *action_.xfer_action_);
      break;
    }
    // .JUB.Proto.EOS.DelegateAction dele_action = 5;
    case kDeleAction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *action_.dele_action_);
      break;
    }
    // .JUB.Proto.EOS.BuyRamAction buy_ram_action = 6;
    case kBuyRamAction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *action_.buy_ram_action_);
      break;
    }
    // .JUB.Proto.EOS.SellRamAction sell_ram_action = 7;
    case kSellRamAction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *action_.sell_ram_action_);
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionEOS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.EOS.ActionEOS)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionEOS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActionEOS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.EOS.ActionEOS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.EOS.ActionEOS)
    MergeFrom(*source);
  }
}

void ActionEOS::MergeFrom(const ActionEOS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.EOS.ActionEOS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currency().size() > 0) {

    currency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  switch (from.action_case()) {
    case kXferAction: {
      _internal_mutable_xfer_action()->::JUB::Proto::EOS::TransferAction::MergeFrom(from._internal_xfer_action());
      break;
    }
    case kDeleAction: {
      _internal_mutable_dele_action()->::JUB::Proto::EOS::DelegateAction::MergeFrom(from._internal_dele_action());
      break;
    }
    case kBuyRamAction: {
      _internal_mutable_buy_ram_action()->::JUB::Proto::EOS::BuyRamAction::MergeFrom(from._internal_buy_ram_action());
      break;
    }
    case kSellRamAction: {
      _internal_mutable_sell_ram_action()->::JUB::Proto::EOS::SellRamAction::MergeFrom(from._internal_sell_ram_action());
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
}

void ActionEOS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.EOS.ActionEOS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionEOS::CopyFrom(const ActionEOS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.EOS.ActionEOS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionEOS::IsInitialized() const {
  return true;
}

void ActionEOS::InternalSwap(ActionEOS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  currency_.Swap(&other->currency_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(action_, other->action_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionEOS::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace EOS
}  // namespace Proto
}  // namespace JUB
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::JUB::Proto::EOS::TransferAction* Arena::CreateMaybeMessage< ::JUB::Proto::EOS::TransferAction >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::EOS::TransferAction >(arena);
}
template<> PROTOBUF_NOINLINE ::JUB::Proto::EOS::DelegateAction* Arena::CreateMaybeMessage< ::JUB::Proto::EOS::DelegateAction >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::EOS::DelegateAction >(arena);
}
template<> PROTOBUF_NOINLINE ::JUB::Proto::EOS::BuyRamAction* Arena::CreateMaybeMessage< ::JUB::Proto::EOS::BuyRamAction >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::EOS::BuyRamAction >(arena);
}
template<> PROTOBUF_NOINLINE ::JUB::Proto::EOS::SellRamAction* Arena::CreateMaybeMessage< ::JUB::Proto::EOS::SellRamAction >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::EOS::SellRamAction >(arena);
}
template<> PROTOBUF_NOINLINE ::JUB::Proto::EOS::ActionEOS* Arena::CreateMaybeMessage< ::JUB::Proto::EOS::ActionEOS >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::EOS::ActionEOS >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
