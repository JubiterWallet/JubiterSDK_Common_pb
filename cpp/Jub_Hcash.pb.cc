// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Jub_Hcash.proto

#include "Jub_Hcash.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fCommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Bip44Path_Jub_5fCommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fHcash_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InputHC_Jub_5fHcash_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fHcash_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OutputHC_Jub_5fHcash_2eproto;
namespace JUB {
namespace Proto {
namespace Hcashn {
class InputHCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputHC> _instance;
} _InputHC_default_instance_;
class OutputHCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OutputHC> _instance;
} _OutputHC_default_instance_;
class TransactionHCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TransactionHC> _instance;
} _TransactionHC_default_instance_;
}  // namespace Hcashn
}  // namespace Proto
}  // namespace JUB
static void InitDefaultsscc_info_InputHC_Jub_5fHcash_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::Hcashn::_InputHC_default_instance_;
    new (ptr) ::JUB::Proto::Hcashn::InputHC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::Hcashn::InputHC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InputHC_Jub_5fHcash_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InputHC_Jub_5fHcash_2eproto}, {
      &scc_info_Bip44Path_Jub_5fCommon_2eproto.base,}};

static void InitDefaultsscc_info_OutputHC_Jub_5fHcash_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::Hcashn::_OutputHC_default_instance_;
    new (ptr) ::JUB::Proto::Hcashn::OutputHC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::Hcashn::OutputHC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OutputHC_Jub_5fHcash_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OutputHC_Jub_5fHcash_2eproto}, {
      &scc_info_Bip44Path_Jub_5fCommon_2eproto.base,}};

static void InitDefaultsscc_info_TransactionHC_Jub_5fHcash_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::Hcashn::_TransactionHC_default_instance_;
    new (ptr) ::JUB::Proto::Hcashn::TransactionHC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::Hcashn::TransactionHC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TransactionHC_Jub_5fHcash_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_TransactionHC_Jub_5fHcash_2eproto}, {
      &scc_info_InputHC_Jub_5fHcash_2eproto.base,
      &scc_info_OutputHC_Jub_5fHcash_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Jub_5fHcash_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Jub_5fHcash_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Jub_5fHcash_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Jub_5fHcash_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Hcashn::InputHC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Hcashn::InputHC, amount_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Hcashn::InputHC, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Hcashn::OutputHC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Hcashn::OutputHC, change_address_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Hcashn::OutputHC, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Hcashn::TransactionHC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Hcashn::TransactionHC, version_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Hcashn::TransactionHC, locktime_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Hcashn::TransactionHC, inputs_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Hcashn::TransactionHC, outputs_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::JUB::Proto::Hcashn::InputHC)},
  { 7, -1, sizeof(::JUB::Proto::Hcashn::OutputHC)},
  { 14, -1, sizeof(::JUB::Proto::Hcashn::TransactionHC)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::Hcashn::_InputHC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::Hcashn::_OutputHC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::Hcashn::_TransactionHC_default_instance_),
};

const char descriptor_table_protodef_Jub_5fHcash_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017Jub_Hcash.proto\022\020JUB.Proto.Hcashn\032\020Jub"
  "_Common.proto\"D\n\007InputHC\022\016\n\006amount\030\001 \001(\004"
  "\022)\n\004path\030\002 \001(\0132\033.JUB.Proto.Common.Bip44P"
  "ath\"M\n\010OutputHC\022\026\n\016change_address\030\001 \001(\010\022"
  ")\n\004path\030\002 \001(\0132\033.JUB.Proto.Common.Bip44Pa"
  "th\"\212\001\n\rTransactionHC\022\017\n\007version\030\001 \001(\r\022\020\n"
  "\010locktime\030\002 \001(\r\022)\n\006inputs\030\003 \003(\0132\031.JUB.Pr"
  "oto.Hcashn.InputHC\022+\n\007outputs\030\004 \003(\0132\032.JU"
  "B.Proto.Hcashn.OutputHCB3\n\025com.jubiter.s"
  "dk.protoB\014HcashnProtos\242\002\013HcashProtosb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Jub_5fHcash_2eproto_deps[1] = {
  &::descriptor_table_Jub_5fCommon_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Jub_5fHcash_2eproto_sccs[3] = {
  &scc_info_InputHC_Jub_5fHcash_2eproto.base,
  &scc_info_OutputHC_Jub_5fHcash_2eproto.base,
  &scc_info_TransactionHC_Jub_5fHcash_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Jub_5fHcash_2eproto_once;
static bool descriptor_table_Jub_5fHcash_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Jub_5fHcash_2eproto = {
  &descriptor_table_Jub_5fHcash_2eproto_initialized, descriptor_table_protodef_Jub_5fHcash_2eproto, "Jub_Hcash.proto", 404,
  &descriptor_table_Jub_5fHcash_2eproto_once, descriptor_table_Jub_5fHcash_2eproto_sccs, descriptor_table_Jub_5fHcash_2eproto_deps, 3, 1,
  schemas, file_default_instances, TableStruct_Jub_5fHcash_2eproto::offsets,
  file_level_metadata_Jub_5fHcash_2eproto, 3, file_level_enum_descriptors_Jub_5fHcash_2eproto, file_level_service_descriptors_Jub_5fHcash_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Jub_5fHcash_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Jub_5fHcash_2eproto), true);
namespace JUB {
namespace Proto {
namespace Hcashn {

// ===================================================================

void InputHC::InitAsDefaultInstance() {
  ::JUB::Proto::Hcashn::_InputHC_default_instance_._instance.get_mutable()->path_ = const_cast< ::JUB::Proto::Common::Bip44Path*>(
      ::JUB::Proto::Common::Bip44Path::internal_default_instance());
}
class InputHC::_Internal {
 public:
  static const ::JUB::Proto::Common::Bip44Path& path(const InputHC* msg);
};

const ::JUB::Proto::Common::Bip44Path&
InputHC::_Internal::path(const InputHC* msg) {
  return *msg->path_;
}
void InputHC::clear_path() {
  if (GetArenaNoVirtual() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
InputHC::InputHC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.Hcashn.InputHC)
}
InputHC::InputHC(const InputHC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::JUB::Proto::Common::Bip44Path(*from.path_);
  } else {
    path_ = nullptr;
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.Hcashn.InputHC)
}

void InputHC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputHC_Jub_5fHcash_2eproto.base);
  ::memset(&path_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&path_)) + sizeof(amount_));
}

InputHC::~InputHC() {
  // @@protoc_insertion_point(destructor:JUB.Proto.Hcashn.InputHC)
  SharedDtor();
}

void InputHC::SharedDtor() {
  if (this != internal_default_instance()) delete path_;
}

void InputHC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputHC& InputHC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputHC_Jub_5fHcash_2eproto.base);
  return *internal_default_instance();
}


void InputHC::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.Hcashn.InputHC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  amount_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* InputHC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 amount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .JUB.Proto.Common.Bip44Path path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InputHC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.Hcashn.InputHC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 amount = 1;
  if (this->amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_amount(), target);
  }

  // .JUB.Proto.Common.Bip44Path path = 2;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::path(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.Hcashn.InputHC)
  return target;
}

size_t InputHC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.Hcashn.InputHC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .JUB.Proto.Common.Bip44Path path = 2;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // uint64 amount = 1;
  if (this->amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_amount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputHC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.Hcashn.InputHC)
  GOOGLE_DCHECK_NE(&from, this);
  const InputHC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputHC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.Hcashn.InputHC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.Hcashn.InputHC)
    MergeFrom(*source);
  }
}

void InputHC::MergeFrom(const InputHC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.Hcashn.InputHC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::JUB::Proto::Common::Bip44Path::MergeFrom(from._internal_path());
  }
  if (from.amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
}

void InputHC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.Hcashn.InputHC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputHC::CopyFrom(const InputHC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.Hcashn.InputHC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputHC::IsInitialized() const {
  return true;
}

void InputHC::InternalSwap(InputHC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(path_, other->path_);
  swap(amount_, other->amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputHC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OutputHC::InitAsDefaultInstance() {
  ::JUB::Proto::Hcashn::_OutputHC_default_instance_._instance.get_mutable()->path_ = const_cast< ::JUB::Proto::Common::Bip44Path*>(
      ::JUB::Proto::Common::Bip44Path::internal_default_instance());
}
class OutputHC::_Internal {
 public:
  static const ::JUB::Proto::Common::Bip44Path& path(const OutputHC* msg);
};

const ::JUB::Proto::Common::Bip44Path&
OutputHC::_Internal::path(const OutputHC* msg) {
  return *msg->path_;
}
void OutputHC::clear_path() {
  if (GetArenaNoVirtual() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
OutputHC::OutputHC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.Hcashn.OutputHC)
}
OutputHC::OutputHC(const OutputHC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::JUB::Proto::Common::Bip44Path(*from.path_);
  } else {
    path_ = nullptr;
  }
  change_address_ = from.change_address_;
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.Hcashn.OutputHC)
}

void OutputHC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OutputHC_Jub_5fHcash_2eproto.base);
  ::memset(&path_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&change_address_) -
      reinterpret_cast<char*>(&path_)) + sizeof(change_address_));
}

OutputHC::~OutputHC() {
  // @@protoc_insertion_point(destructor:JUB.Proto.Hcashn.OutputHC)
  SharedDtor();
}

void OutputHC::SharedDtor() {
  if (this != internal_default_instance()) delete path_;
}

void OutputHC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OutputHC& OutputHC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OutputHC_Jub_5fHcash_2eproto.base);
  return *internal_default_instance();
}


void OutputHC::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.Hcashn.OutputHC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  change_address_ = false;
  _internal_metadata_.Clear();
}

const char* OutputHC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool change_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          change_address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .JUB.Proto.Common.Bip44Path path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OutputHC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.Hcashn.OutputHC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool change_address = 1;
  if (this->change_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_change_address(), target);
  }

  // .JUB.Proto.Common.Bip44Path path = 2;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::path(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.Hcashn.OutputHC)
  return target;
}

size_t OutputHC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.Hcashn.OutputHC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .JUB.Proto.Common.Bip44Path path = 2;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // bool change_address = 1;
  if (this->change_address() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutputHC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.Hcashn.OutputHC)
  GOOGLE_DCHECK_NE(&from, this);
  const OutputHC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OutputHC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.Hcashn.OutputHC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.Hcashn.OutputHC)
    MergeFrom(*source);
  }
}

void OutputHC::MergeFrom(const OutputHC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.Hcashn.OutputHC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::JUB::Proto::Common::Bip44Path::MergeFrom(from._internal_path());
  }
  if (from.change_address() != 0) {
    _internal_set_change_address(from._internal_change_address());
  }
}

void OutputHC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.Hcashn.OutputHC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputHC::CopyFrom(const OutputHC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.Hcashn.OutputHC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputHC::IsInitialized() const {
  return true;
}

void OutputHC::InternalSwap(OutputHC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(path_, other->path_);
  swap(change_address_, other->change_address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OutputHC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TransactionHC::InitAsDefaultInstance() {
}
class TransactionHC::_Internal {
 public:
};

TransactionHC::TransactionHC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.Hcashn.TransactionHC)
}
TransactionHC::TransactionHC(const TransactionHC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      inputs_(from.inputs_),
      outputs_(from.outputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&locktime_) -
    reinterpret_cast<char*>(&version_)) + sizeof(locktime_));
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.Hcashn.TransactionHC)
}

void TransactionHC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TransactionHC_Jub_5fHcash_2eproto.base);
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&locktime_) -
      reinterpret_cast<char*>(&version_)) + sizeof(locktime_));
}

TransactionHC::~TransactionHC() {
  // @@protoc_insertion_point(destructor:JUB.Proto.Hcashn.TransactionHC)
  SharedDtor();
}

void TransactionHC::SharedDtor() {
}

void TransactionHC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransactionHC& TransactionHC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TransactionHC_Jub_5fHcash_2eproto.base);
  return *internal_default_instance();
}


void TransactionHC::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.Hcashn.TransactionHC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  outputs_.Clear();
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&locktime_) -
      reinterpret_cast<char*>(&version_)) + sizeof(locktime_));
  _internal_metadata_.Clear();
}

const char* TransactionHC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 locktime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          locktime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .JUB.Proto.Hcashn.InputHC inputs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .JUB.Proto.Hcashn.OutputHC outputs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TransactionHC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.Hcashn.TransactionHC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_version(), target);
  }

  // uint32 locktime = 2;
  if (this->locktime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_locktime(), target);
  }

  // repeated .JUB.Proto.Hcashn.InputHC inputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_inputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_inputs(i), target, stream);
  }

  // repeated .JUB.Proto.Hcashn.OutputHC outputs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_outputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_outputs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.Hcashn.TransactionHC)
  return target;
}

size_t TransactionHC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.Hcashn.TransactionHC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .JUB.Proto.Hcashn.InputHC inputs = 3;
  total_size += 1UL * this->_internal_inputs_size();
  for (const auto& msg : this->inputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .JUB.Proto.Hcashn.OutputHC outputs = 4;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_version());
  }

  // uint32 locktime = 2;
  if (this->locktime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_locktime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionHC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.Hcashn.TransactionHC)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionHC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransactionHC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.Hcashn.TransactionHC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.Hcashn.TransactionHC)
    MergeFrom(*source);
  }
}

void TransactionHC::MergeFrom(const TransactionHC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.Hcashn.TransactionHC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.locktime() != 0) {
    _internal_set_locktime(from._internal_locktime());
  }
}

void TransactionHC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.Hcashn.TransactionHC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionHC::CopyFrom(const TransactionHC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.Hcashn.TransactionHC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionHC::IsInitialized() const {
  return true;
}

void TransactionHC::InternalSwap(TransactionHC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  inputs_.InternalSwap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  swap(version_, other->version_);
  swap(locktime_, other->locktime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionHC::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Hcashn
}  // namespace Proto
}  // namespace JUB
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::JUB::Proto::Hcashn::InputHC* Arena::CreateMaybeMessage< ::JUB::Proto::Hcashn::InputHC >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::Hcashn::InputHC >(arena);
}
template<> PROTOBUF_NOINLINE ::JUB::Proto::Hcashn::OutputHC* Arena::CreateMaybeMessage< ::JUB::Proto::Hcashn::OutputHC >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::Hcashn::OutputHC >(arena);
}
template<> PROTOBUF_NOINLINE ::JUB::Proto::Hcashn::TransactionHC* Arena::CreateMaybeMessage< ::JUB::Proto::Hcashn::TransactionHC >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::Hcashn::TransactionHC >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
