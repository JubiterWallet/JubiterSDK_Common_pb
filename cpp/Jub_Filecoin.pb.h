// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Jub_Filecoin.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Jub_5fFilecoin_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Jub_5fFilecoin_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Jub_Common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Jub_5fFilecoin_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Jub_5fFilecoin_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Jub_5fFilecoin_2eproto;
namespace JUB {
namespace Proto {
namespace Filecoin {
class ContextCfgFIL;
class ContextCfgFILDefaultTypeInternal;
extern ContextCfgFILDefaultTypeInternal _ContextCfgFIL_default_instance_;
class TransactionFIL;
class TransactionFILDefaultTypeInternal;
extern TransactionFILDefaultTypeInternal _TransactionFIL_default_instance_;
}  // namespace Filecoin
}  // namespace Proto
}  // namespace JUB
PROTOBUF_NAMESPACE_OPEN
template<> ::JUB::Proto::Filecoin::ContextCfgFIL* Arena::CreateMaybeMessage<::JUB::Proto::Filecoin::ContextCfgFIL>(Arena*);
template<> ::JUB::Proto::Filecoin::TransactionFIL* Arena::CreateMaybeMessage<::JUB::Proto::Filecoin::TransactionFIL>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace JUB {
namespace Proto {
namespace Filecoin {

// ===================================================================

class ContextCfgFIL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:JUB.Proto.Filecoin.ContextCfgFIL) */ {
 public:
  ContextCfgFIL();
  virtual ~ContextCfgFIL();

  ContextCfgFIL(const ContextCfgFIL& from);
  ContextCfgFIL(ContextCfgFIL&& from) noexcept
    : ContextCfgFIL() {
    *this = ::std::move(from);
  }

  inline ContextCfgFIL& operator=(const ContextCfgFIL& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContextCfgFIL& operator=(ContextCfgFIL&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ContextCfgFIL& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContextCfgFIL* internal_default_instance() {
    return reinterpret_cast<const ContextCfgFIL*>(
               &_ContextCfgFIL_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ContextCfgFIL& a, ContextCfgFIL& b) {
    a.Swap(&b);
  }
  inline void Swap(ContextCfgFIL* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ContextCfgFIL* New() const final {
    return CreateMaybeMessage<ContextCfgFIL>(nullptr);
  }

  ContextCfgFIL* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ContextCfgFIL>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ContextCfgFIL& from);
  void MergeFrom(const ContextCfgFIL& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContextCfgFIL* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "JUB.Proto.Filecoin.ContextCfgFIL";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Jub_5fFilecoin_2eproto);
    return ::descriptor_table_Jub_5fFilecoin_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMainPathFieldNumber = 1,
  };
  // string main_path = 1;
  void clear_main_path();
  const std::string& main_path() const;
  void set_main_path(const std::string& value);
  void set_main_path(std::string&& value);
  void set_main_path(const char* value);
  void set_main_path(const char* value, size_t size);
  std::string* mutable_main_path();
  std::string* release_main_path();
  void set_allocated_main_path(std::string* main_path);

  // @@protoc_insertion_point(class_scope:JUB.Proto.Filecoin.ContextCfgFIL)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr main_path_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Jub_5fFilecoin_2eproto;
};
// -------------------------------------------------------------------

class TransactionFIL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:JUB.Proto.Filecoin.TransactionFIL) */ {
 public:
  TransactionFIL();
  virtual ~TransactionFIL();

  TransactionFIL(const TransactionFIL& from);
  TransactionFIL(TransactionFIL&& from) noexcept
    : TransactionFIL() {
    *this = ::std::move(from);
  }

  inline TransactionFIL& operator=(const TransactionFIL& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransactionFIL& operator=(TransactionFIL&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TransactionFIL& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransactionFIL* internal_default_instance() {
    return reinterpret_cast<const TransactionFIL*>(
               &_TransactionFIL_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TransactionFIL& a, TransactionFIL& b) {
    a.Swap(&b);
  }
  inline void Swap(TransactionFIL* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TransactionFIL* New() const final {
    return CreateMaybeMessage<TransactionFIL>(nullptr);
  }

  TransactionFIL* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TransactionFIL>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TransactionFIL& from);
  void MergeFrom(const TransactionFIL& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransactionFIL* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "JUB.Proto.Filecoin.TransactionFIL";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Jub_5fFilecoin_2eproto);
    return ::descriptor_table_Jub_5fFilecoin_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGasFeeCapInAttoFieldNumber = 4,
    kGasPremiumInAttoFieldNumber = 5,
    kToFieldNumber = 6,
    kValueInAttoFieldNumber = 7,
    kInputFieldNumber = 8,
    kPathFieldNumber = 1,
    kNonceFieldNumber = 2,
    kGasLimitFieldNumber = 3,
  };
  // string gas_fee_cap_in_atto = 4;
  void clear_gas_fee_cap_in_atto();
  const std::string& gas_fee_cap_in_atto() const;
  void set_gas_fee_cap_in_atto(const std::string& value);
  void set_gas_fee_cap_in_atto(std::string&& value);
  void set_gas_fee_cap_in_atto(const char* value);
  void set_gas_fee_cap_in_atto(const char* value, size_t size);
  std::string* mutable_gas_fee_cap_in_atto();
  std::string* release_gas_fee_cap_in_atto();
  void set_allocated_gas_fee_cap_in_atto(std::string* gas_fee_cap_in_atto);

  // string gas_premium_in_atto = 5;
  void clear_gas_premium_in_atto();
  const std::string& gas_premium_in_atto() const;
  void set_gas_premium_in_atto(const std::string& value);
  void set_gas_premium_in_atto(std::string&& value);
  void set_gas_premium_in_atto(const char* value);
  void set_gas_premium_in_atto(const char* value, size_t size);
  std::string* mutable_gas_premium_in_atto();
  std::string* release_gas_premium_in_atto();
  void set_allocated_gas_premium_in_atto(std::string* gas_premium_in_atto);

  // string to = 6;
  void clear_to();
  const std::string& to() const;
  void set_to(const std::string& value);
  void set_to(std::string&& value);
  void set_to(const char* value);
  void set_to(const char* value, size_t size);
  std::string* mutable_to();
  std::string* release_to();
  void set_allocated_to(std::string* to);

  // string value_in_atto = 7;
  void clear_value_in_atto();
  const std::string& value_in_atto() const;
  void set_value_in_atto(const std::string& value);
  void set_value_in_atto(std::string&& value);
  void set_value_in_atto(const char* value);
  void set_value_in_atto(const char* value, size_t size);
  std::string* mutable_value_in_atto();
  std::string* release_value_in_atto();
  void set_allocated_value_in_atto(std::string* value_in_atto);

  // string input = 8;
  void clear_input();
  const std::string& input() const;
  void set_input(const std::string& value);
  void set_input(std::string&& value);
  void set_input(const char* value);
  void set_input(const char* value, size_t size);
  std::string* mutable_input();
  std::string* release_input();
  void set_allocated_input(std::string* input);

  // .JUB.Proto.Common.Bip44Path path = 1;
  bool has_path() const;
  void clear_path();
  const ::JUB::Proto::Common::Bip44Path& path() const;
  ::JUB::Proto::Common::Bip44Path* release_path();
  ::JUB::Proto::Common::Bip44Path* mutable_path();
  void set_allocated_path(::JUB::Proto::Common::Bip44Path* path);

  // uint32 nonce = 2;
  void clear_nonce();
  ::PROTOBUF_NAMESPACE_ID::uint32 nonce() const;
  void set_nonce(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 gas_limit = 3;
  void clear_gas_limit();
  ::PROTOBUF_NAMESPACE_ID::uint32 gas_limit() const;
  void set_gas_limit(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:JUB.Proto.Filecoin.TransactionFIL)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gas_fee_cap_in_atto_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gas_premium_in_atto_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr to_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_in_atto_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr input_;
  ::JUB::Proto::Common::Bip44Path* path_;
  ::PROTOBUF_NAMESPACE_ID::uint32 nonce_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gas_limit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Jub_5fFilecoin_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ContextCfgFIL

// string main_path = 1;
inline void ContextCfgFIL::clear_main_path() {
  main_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ContextCfgFIL::main_path() const {
  // @@protoc_insertion_point(field_get:JUB.Proto.Filecoin.ContextCfgFIL.main_path)
  return main_path_.GetNoArena();
}
inline void ContextCfgFIL::set_main_path(const std::string& value) {
  
  main_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JUB.Proto.Filecoin.ContextCfgFIL.main_path)
}
inline void ContextCfgFIL::set_main_path(std::string&& value) {
  
  main_path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:JUB.Proto.Filecoin.ContextCfgFIL.main_path)
}
inline void ContextCfgFIL::set_main_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  main_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JUB.Proto.Filecoin.ContextCfgFIL.main_path)
}
inline void ContextCfgFIL::set_main_path(const char* value, size_t size) {
  
  main_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JUB.Proto.Filecoin.ContextCfgFIL.main_path)
}
inline std::string* ContextCfgFIL::mutable_main_path() {
  
  // @@protoc_insertion_point(field_mutable:JUB.Proto.Filecoin.ContextCfgFIL.main_path)
  return main_path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ContextCfgFIL::release_main_path() {
  // @@protoc_insertion_point(field_release:JUB.Proto.Filecoin.ContextCfgFIL.main_path)
  
  return main_path_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ContextCfgFIL::set_allocated_main_path(std::string* main_path) {
  if (main_path != nullptr) {
    
  } else {
    
  }
  main_path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), main_path);
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.Filecoin.ContextCfgFIL.main_path)
}

// -------------------------------------------------------------------

// TransactionFIL

// .JUB.Proto.Common.Bip44Path path = 1;
inline bool TransactionFIL::has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline const ::JUB::Proto::Common::Bip44Path& TransactionFIL::path() const {
  const ::JUB::Proto::Common::Bip44Path* p = path_;
  // @@protoc_insertion_point(field_get:JUB.Proto.Filecoin.TransactionFIL.path)
  return p != nullptr ? *p : *reinterpret_cast<const ::JUB::Proto::Common::Bip44Path*>(
      &::JUB::Proto::Common::_Bip44Path_default_instance_);
}
inline ::JUB::Proto::Common::Bip44Path* TransactionFIL::release_path() {
  // @@protoc_insertion_point(field_release:JUB.Proto.Filecoin.TransactionFIL.path)
  
  ::JUB::Proto::Common::Bip44Path* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::JUB::Proto::Common::Bip44Path* TransactionFIL::mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::JUB::Proto::Common::Bip44Path>(GetArenaNoVirtual());
    path_ = p;
  }
  // @@protoc_insertion_point(field_mutable:JUB.Proto.Filecoin.TransactionFIL.path)
  return path_;
}
inline void TransactionFIL::set_allocated_path(::JUB::Proto::Common::Bip44Path* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.Filecoin.TransactionFIL.path)
}

// uint32 nonce = 2;
inline void TransactionFIL::clear_nonce() {
  nonce_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TransactionFIL::nonce() const {
  // @@protoc_insertion_point(field_get:JUB.Proto.Filecoin.TransactionFIL.nonce)
  return nonce_;
}
inline void TransactionFIL::set_nonce(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  nonce_ = value;
  // @@protoc_insertion_point(field_set:JUB.Proto.Filecoin.TransactionFIL.nonce)
}

// uint32 gas_limit = 3;
inline void TransactionFIL::clear_gas_limit() {
  gas_limit_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TransactionFIL::gas_limit() const {
  // @@protoc_insertion_point(field_get:JUB.Proto.Filecoin.TransactionFIL.gas_limit)
  return gas_limit_;
}
inline void TransactionFIL::set_gas_limit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  gas_limit_ = value;
  // @@protoc_insertion_point(field_set:JUB.Proto.Filecoin.TransactionFIL.gas_limit)
}

// string gas_fee_cap_in_atto = 4;
inline void TransactionFIL::clear_gas_fee_cap_in_atto() {
  gas_fee_cap_in_atto_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TransactionFIL::gas_fee_cap_in_atto() const {
  // @@protoc_insertion_point(field_get:JUB.Proto.Filecoin.TransactionFIL.gas_fee_cap_in_atto)
  return gas_fee_cap_in_atto_.GetNoArena();
}
inline void TransactionFIL::set_gas_fee_cap_in_atto(const std::string& value) {
  
  gas_fee_cap_in_atto_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JUB.Proto.Filecoin.TransactionFIL.gas_fee_cap_in_atto)
}
inline void TransactionFIL::set_gas_fee_cap_in_atto(std::string&& value) {
  
  gas_fee_cap_in_atto_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:JUB.Proto.Filecoin.TransactionFIL.gas_fee_cap_in_atto)
}
inline void TransactionFIL::set_gas_fee_cap_in_atto(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gas_fee_cap_in_atto_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JUB.Proto.Filecoin.TransactionFIL.gas_fee_cap_in_atto)
}
inline void TransactionFIL::set_gas_fee_cap_in_atto(const char* value, size_t size) {
  
  gas_fee_cap_in_atto_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JUB.Proto.Filecoin.TransactionFIL.gas_fee_cap_in_atto)
}
inline std::string* TransactionFIL::mutable_gas_fee_cap_in_atto() {
  
  // @@protoc_insertion_point(field_mutable:JUB.Proto.Filecoin.TransactionFIL.gas_fee_cap_in_atto)
  return gas_fee_cap_in_atto_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TransactionFIL::release_gas_fee_cap_in_atto() {
  // @@protoc_insertion_point(field_release:JUB.Proto.Filecoin.TransactionFIL.gas_fee_cap_in_atto)
  
  return gas_fee_cap_in_atto_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionFIL::set_allocated_gas_fee_cap_in_atto(std::string* gas_fee_cap_in_atto) {
  if (gas_fee_cap_in_atto != nullptr) {
    
  } else {
    
  }
  gas_fee_cap_in_atto_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gas_fee_cap_in_atto);
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.Filecoin.TransactionFIL.gas_fee_cap_in_atto)
}

// string gas_premium_in_atto = 5;
inline void TransactionFIL::clear_gas_premium_in_atto() {
  gas_premium_in_atto_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TransactionFIL::gas_premium_in_atto() const {
  // @@protoc_insertion_point(field_get:JUB.Proto.Filecoin.TransactionFIL.gas_premium_in_atto)
  return gas_premium_in_atto_.GetNoArena();
}
inline void TransactionFIL::set_gas_premium_in_atto(const std::string& value) {
  
  gas_premium_in_atto_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JUB.Proto.Filecoin.TransactionFIL.gas_premium_in_atto)
}
inline void TransactionFIL::set_gas_premium_in_atto(std::string&& value) {
  
  gas_premium_in_atto_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:JUB.Proto.Filecoin.TransactionFIL.gas_premium_in_atto)
}
inline void TransactionFIL::set_gas_premium_in_atto(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gas_premium_in_atto_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JUB.Proto.Filecoin.TransactionFIL.gas_premium_in_atto)
}
inline void TransactionFIL::set_gas_premium_in_atto(const char* value, size_t size) {
  
  gas_premium_in_atto_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JUB.Proto.Filecoin.TransactionFIL.gas_premium_in_atto)
}
inline std::string* TransactionFIL::mutable_gas_premium_in_atto() {
  
  // @@protoc_insertion_point(field_mutable:JUB.Proto.Filecoin.TransactionFIL.gas_premium_in_atto)
  return gas_premium_in_atto_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TransactionFIL::release_gas_premium_in_atto() {
  // @@protoc_insertion_point(field_release:JUB.Proto.Filecoin.TransactionFIL.gas_premium_in_atto)
  
  return gas_premium_in_atto_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionFIL::set_allocated_gas_premium_in_atto(std::string* gas_premium_in_atto) {
  if (gas_premium_in_atto != nullptr) {
    
  } else {
    
  }
  gas_premium_in_atto_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gas_premium_in_atto);
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.Filecoin.TransactionFIL.gas_premium_in_atto)
}

// string to = 6;
inline void TransactionFIL::clear_to() {
  to_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TransactionFIL::to() const {
  // @@protoc_insertion_point(field_get:JUB.Proto.Filecoin.TransactionFIL.to)
  return to_.GetNoArena();
}
inline void TransactionFIL::set_to(const std::string& value) {
  
  to_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JUB.Proto.Filecoin.TransactionFIL.to)
}
inline void TransactionFIL::set_to(std::string&& value) {
  
  to_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:JUB.Proto.Filecoin.TransactionFIL.to)
}
inline void TransactionFIL::set_to(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  to_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JUB.Proto.Filecoin.TransactionFIL.to)
}
inline void TransactionFIL::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JUB.Proto.Filecoin.TransactionFIL.to)
}
inline std::string* TransactionFIL::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:JUB.Proto.Filecoin.TransactionFIL.to)
  return to_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TransactionFIL::release_to() {
  // @@protoc_insertion_point(field_release:JUB.Proto.Filecoin.TransactionFIL.to)
  
  return to_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionFIL::set_allocated_to(std::string* to) {
  if (to != nullptr) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.Filecoin.TransactionFIL.to)
}

// string value_in_atto = 7;
inline void TransactionFIL::clear_value_in_atto() {
  value_in_atto_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TransactionFIL::value_in_atto() const {
  // @@protoc_insertion_point(field_get:JUB.Proto.Filecoin.TransactionFIL.value_in_atto)
  return value_in_atto_.GetNoArena();
}
inline void TransactionFIL::set_value_in_atto(const std::string& value) {
  
  value_in_atto_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JUB.Proto.Filecoin.TransactionFIL.value_in_atto)
}
inline void TransactionFIL::set_value_in_atto(std::string&& value) {
  
  value_in_atto_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:JUB.Proto.Filecoin.TransactionFIL.value_in_atto)
}
inline void TransactionFIL::set_value_in_atto(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_in_atto_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JUB.Proto.Filecoin.TransactionFIL.value_in_atto)
}
inline void TransactionFIL::set_value_in_atto(const char* value, size_t size) {
  
  value_in_atto_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JUB.Proto.Filecoin.TransactionFIL.value_in_atto)
}
inline std::string* TransactionFIL::mutable_value_in_atto() {
  
  // @@protoc_insertion_point(field_mutable:JUB.Proto.Filecoin.TransactionFIL.value_in_atto)
  return value_in_atto_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TransactionFIL::release_value_in_atto() {
  // @@protoc_insertion_point(field_release:JUB.Proto.Filecoin.TransactionFIL.value_in_atto)
  
  return value_in_atto_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionFIL::set_allocated_value_in_atto(std::string* value_in_atto) {
  if (value_in_atto != nullptr) {
    
  } else {
    
  }
  value_in_atto_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value_in_atto);
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.Filecoin.TransactionFIL.value_in_atto)
}

// string input = 8;
inline void TransactionFIL::clear_input() {
  input_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TransactionFIL::input() const {
  // @@protoc_insertion_point(field_get:JUB.Proto.Filecoin.TransactionFIL.input)
  return input_.GetNoArena();
}
inline void TransactionFIL::set_input(const std::string& value) {
  
  input_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JUB.Proto.Filecoin.TransactionFIL.input)
}
inline void TransactionFIL::set_input(std::string&& value) {
  
  input_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:JUB.Proto.Filecoin.TransactionFIL.input)
}
inline void TransactionFIL::set_input(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  input_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JUB.Proto.Filecoin.TransactionFIL.input)
}
inline void TransactionFIL::set_input(const char* value, size_t size) {
  
  input_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JUB.Proto.Filecoin.TransactionFIL.input)
}
inline std::string* TransactionFIL::mutable_input() {
  
  // @@protoc_insertion_point(field_mutable:JUB.Proto.Filecoin.TransactionFIL.input)
  return input_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TransactionFIL::release_input() {
  // @@protoc_insertion_point(field_release:JUB.Proto.Filecoin.TransactionFIL.input)
  
  return input_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionFIL::set_allocated_input(std::string* input) {
  if (input != nullptr) {
    
  } else {
    
  }
  input_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:JUB.Proto.Filecoin.TransactionFIL.input)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Filecoin
}  // namespace Proto
}  // namespace JUB

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Jub_5fFilecoin_2eproto
