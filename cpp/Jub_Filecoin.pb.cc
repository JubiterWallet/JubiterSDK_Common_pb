// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Jub_Filecoin.proto

#include "Jub_Filecoin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Jub_5fCommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Bip44Path_Jub_5fCommon_2eproto;
namespace JUB {
namespace Proto {
namespace Filecoin {
class ContextCfgFILDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ContextCfgFIL> _instance;
} _ContextCfgFIL_default_instance_;
class TransactionFILDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TransactionFIL> _instance;
} _TransactionFIL_default_instance_;
}  // namespace Filecoin
}  // namespace Proto
}  // namespace JUB
static void InitDefaultsscc_info_ContextCfgFIL_Jub_5fFilecoin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::Filecoin::_ContextCfgFIL_default_instance_;
    new (ptr) ::JUB::Proto::Filecoin::ContextCfgFIL();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::Filecoin::ContextCfgFIL::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ContextCfgFIL_Jub_5fFilecoin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ContextCfgFIL_Jub_5fFilecoin_2eproto}, {}};

static void InitDefaultsscc_info_TransactionFIL_Jub_5fFilecoin_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::JUB::Proto::Filecoin::_TransactionFIL_default_instance_;
    new (ptr) ::JUB::Proto::Filecoin::TransactionFIL();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JUB::Proto::Filecoin::TransactionFIL::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TransactionFIL_Jub_5fFilecoin_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_TransactionFIL_Jub_5fFilecoin_2eproto}, {
      &scc_info_Bip44Path_Jub_5fCommon_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Jub_5fFilecoin_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Jub_5fFilecoin_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Jub_5fFilecoin_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Jub_5fFilecoin_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Filecoin::ContextCfgFIL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Filecoin::ContextCfgFIL, main_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Filecoin::TransactionFIL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Filecoin::TransactionFIL, path_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Filecoin::TransactionFIL, nonce_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Filecoin::TransactionFIL, gas_limit_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Filecoin::TransactionFIL, gas_fee_cap_in_atto_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Filecoin::TransactionFIL, gas_premium_in_atto_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Filecoin::TransactionFIL, to_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Filecoin::TransactionFIL, value_in_atto_),
  PROTOBUF_FIELD_OFFSET(::JUB::Proto::Filecoin::TransactionFIL, input_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::JUB::Proto::Filecoin::ContextCfgFIL)},
  { 6, -1, sizeof(::JUB::Proto::Filecoin::TransactionFIL)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::Filecoin::_ContextCfgFIL_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::JUB::Proto::Filecoin::_TransactionFIL_default_instance_),
};

const char descriptor_table_protodef_Jub_5fFilecoin_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022Jub_Filecoin.proto\022\022JUB.Proto.Filecoin"
  "\032\020Jub_Common.proto\"\"\n\rContextCfgFIL\022\021\n\tm"
  "ain_path\030\001 \001(\t\"\311\001\n\016TransactionFIL\022)\n\004pat"
  "h\030\001 \001(\0132\033.JUB.Proto.Common.Bip44Path\022\r\n\005"
  "nonce\030\002 \001(\r\022\021\n\tgas_limit\030\003 \001(\r\022\033\n\023gas_fe"
  "e_cap_in_atto\030\004 \001(\t\022\033\n\023gas_premium_in_at"
  "to\030\005 \001(\t\022\n\n\002to\030\006 \001(\t\022\025\n\rvalue_in_atto\030\007 "
  "\001(\t\022\r\n\005input\030\010 \001(\tB8\n\025com.jubiter.sdk.pr"
  "otoB\016FilecoinProtos\242\002\016FilecoinProtosb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Jub_5fFilecoin_2eproto_deps[1] = {
  &::descriptor_table_Jub_5fCommon_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Jub_5fFilecoin_2eproto_sccs[2] = {
  &scc_info_ContextCfgFIL_Jub_5fFilecoin_2eproto.base,
  &scc_info_TransactionFIL_Jub_5fFilecoin_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Jub_5fFilecoin_2eproto_once;
static bool descriptor_table_Jub_5fFilecoin_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Jub_5fFilecoin_2eproto = {
  &descriptor_table_Jub_5fFilecoin_2eproto_initialized, descriptor_table_protodef_Jub_5fFilecoin_2eproto, "Jub_Filecoin.proto", 364,
  &descriptor_table_Jub_5fFilecoin_2eproto_once, descriptor_table_Jub_5fFilecoin_2eproto_sccs, descriptor_table_Jub_5fFilecoin_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_Jub_5fFilecoin_2eproto::offsets,
  file_level_metadata_Jub_5fFilecoin_2eproto, 2, file_level_enum_descriptors_Jub_5fFilecoin_2eproto, file_level_service_descriptors_Jub_5fFilecoin_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Jub_5fFilecoin_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Jub_5fFilecoin_2eproto), true);
namespace JUB {
namespace Proto {
namespace Filecoin {

// ===================================================================

void ContextCfgFIL::InitAsDefaultInstance() {
}
class ContextCfgFIL::_Internal {
 public:
};

ContextCfgFIL::ContextCfgFIL()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.Filecoin.ContextCfgFIL)
}
ContextCfgFIL::ContextCfgFIL(const ContextCfgFIL& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  main_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.main_path().empty()) {
    main_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.main_path_);
  }
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.Filecoin.ContextCfgFIL)
}

void ContextCfgFIL::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ContextCfgFIL_Jub_5fFilecoin_2eproto.base);
  main_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ContextCfgFIL::~ContextCfgFIL() {
  // @@protoc_insertion_point(destructor:JUB.Proto.Filecoin.ContextCfgFIL)
  SharedDtor();
}

void ContextCfgFIL::SharedDtor() {
  main_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ContextCfgFIL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ContextCfgFIL& ContextCfgFIL::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ContextCfgFIL_Jub_5fFilecoin_2eproto.base);
  return *internal_default_instance();
}


void ContextCfgFIL::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.Filecoin.ContextCfgFIL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  main_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ContextCfgFIL::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string main_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_main_path(), ptr, ctx, "JUB.Proto.Filecoin.ContextCfgFIL.main_path");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ContextCfgFIL::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:JUB.Proto.Filecoin.ContextCfgFIL)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string main_path = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_main_path()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->main_path().data(), static_cast<int>(this->main_path().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.Filecoin.ContextCfgFIL.main_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JUB.Proto.Filecoin.ContextCfgFIL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JUB.Proto.Filecoin.ContextCfgFIL)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ContextCfgFIL::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JUB.Proto.Filecoin.ContextCfgFIL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string main_path = 1;
  if (this->main_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->main_path().data(), static_cast<int>(this->main_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Filecoin.ContextCfgFIL.main_path");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->main_path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JUB.Proto.Filecoin.ContextCfgFIL)
}

::PROTOBUF_NAMESPACE_ID::uint8* ContextCfgFIL::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.Filecoin.ContextCfgFIL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string main_path = 1;
  if (this->main_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->main_path().data(), static_cast<int>(this->main_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Filecoin.ContextCfgFIL.main_path");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->main_path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.Filecoin.ContextCfgFIL)
  return target;
}

size_t ContextCfgFIL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.Filecoin.ContextCfgFIL)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string main_path = 1;
  if (this->main_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->main_path());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContextCfgFIL::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.Filecoin.ContextCfgFIL)
  GOOGLE_DCHECK_NE(&from, this);
  const ContextCfgFIL* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ContextCfgFIL>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.Filecoin.ContextCfgFIL)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.Filecoin.ContextCfgFIL)
    MergeFrom(*source);
  }
}

void ContextCfgFIL::MergeFrom(const ContextCfgFIL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.Filecoin.ContextCfgFIL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.main_path().size() > 0) {

    main_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.main_path_);
  }
}

void ContextCfgFIL::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.Filecoin.ContextCfgFIL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContextCfgFIL::CopyFrom(const ContextCfgFIL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.Filecoin.ContextCfgFIL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContextCfgFIL::IsInitialized() const {
  return true;
}

void ContextCfgFIL::InternalSwap(ContextCfgFIL* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  main_path_.Swap(&other->main_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ContextCfgFIL::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TransactionFIL::InitAsDefaultInstance() {
  ::JUB::Proto::Filecoin::_TransactionFIL_default_instance_._instance.get_mutable()->path_ = const_cast< ::JUB::Proto::Common::Bip44Path*>(
      ::JUB::Proto::Common::Bip44Path::internal_default_instance());
}
class TransactionFIL::_Internal {
 public:
  static const ::JUB::Proto::Common::Bip44Path& path(const TransactionFIL* msg);
};

const ::JUB::Proto::Common::Bip44Path&
TransactionFIL::_Internal::path(const TransactionFIL* msg) {
  return *msg->path_;
}
void TransactionFIL::clear_path() {
  if (GetArenaNoVirtual() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
TransactionFIL::TransactionFIL()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:JUB.Proto.Filecoin.TransactionFIL)
}
TransactionFIL::TransactionFIL(const TransactionFIL& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gas_fee_cap_in_atto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.gas_fee_cap_in_atto().empty()) {
    gas_fee_cap_in_atto_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.gas_fee_cap_in_atto_);
  }
  gas_premium_in_atto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.gas_premium_in_atto().empty()) {
    gas_premium_in_atto_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.gas_premium_in_atto_);
  }
  to_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.to().empty()) {
    to_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  value_in_atto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.value_in_atto().empty()) {
    value_in_atto_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_in_atto_);
  }
  input_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.input().empty()) {
    input_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  if (from.has_path()) {
    path_ = new ::JUB::Proto::Common::Bip44Path(*from.path_);
  } else {
    path_ = nullptr;
  }
  ::memcpy(&nonce_, &from.nonce_,
    static_cast<size_t>(reinterpret_cast<char*>(&gas_limit_) -
    reinterpret_cast<char*>(&nonce_)) + sizeof(gas_limit_));
  // @@protoc_insertion_point(copy_constructor:JUB.Proto.Filecoin.TransactionFIL)
}

void TransactionFIL::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TransactionFIL_Jub_5fFilecoin_2eproto.base);
  gas_fee_cap_in_atto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gas_premium_in_atto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_in_atto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&path_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gas_limit_) -
      reinterpret_cast<char*>(&path_)) + sizeof(gas_limit_));
}

TransactionFIL::~TransactionFIL() {
  // @@protoc_insertion_point(destructor:JUB.Proto.Filecoin.TransactionFIL)
  SharedDtor();
}

void TransactionFIL::SharedDtor() {
  gas_fee_cap_in_atto_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gas_premium_in_atto_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_in_atto_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete path_;
}

void TransactionFIL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransactionFIL& TransactionFIL::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TransactionFIL_Jub_5fFilecoin_2eproto.base);
  return *internal_default_instance();
}


void TransactionFIL::Clear() {
// @@protoc_insertion_point(message_clear_start:JUB.Proto.Filecoin.TransactionFIL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gas_fee_cap_in_atto_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gas_premium_in_atto_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_in_atto_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  ::memset(&nonce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gas_limit_) -
      reinterpret_cast<char*>(&nonce_)) + sizeof(gas_limit_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransactionFIL::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .JUB.Proto.Common.Bip44Path path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 nonce = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 gas_limit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          gas_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string gas_fee_cap_in_atto = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_gas_fee_cap_in_atto(), ptr, ctx, "JUB.Proto.Filecoin.TransactionFIL.gas_fee_cap_in_atto");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string gas_premium_in_atto = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_gas_premium_in_atto(), ptr, ctx, "JUB.Proto.Filecoin.TransactionFIL.gas_premium_in_atto");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string to = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_to(), ptr, ctx, "JUB.Proto.Filecoin.TransactionFIL.to");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value_in_atto = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_value_in_atto(), ptr, ctx, "JUB.Proto.Filecoin.TransactionFIL.value_in_atto");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string input = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_input(), ptr, ctx, "JUB.Proto.Filecoin.TransactionFIL.input");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransactionFIL::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:JUB.Proto.Filecoin.TransactionFIL)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .JUB.Proto.Common.Bip44Path path = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nonce = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gas_limit = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gas_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gas_fee_cap_in_atto = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_gas_fee_cap_in_atto()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->gas_fee_cap_in_atto().data(), static_cast<int>(this->gas_fee_cap_in_atto().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.Filecoin.TransactionFIL.gas_fee_cap_in_atto"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gas_premium_in_atto = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_gas_premium_in_atto()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->gas_premium_in_atto().data(), static_cast<int>(this->gas_premium_in_atto().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.Filecoin.TransactionFIL.gas_premium_in_atto"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.Filecoin.TransactionFIL.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value_in_atto = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_value_in_atto()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->value_in_atto().data(), static_cast<int>(this->value_in_atto().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.Filecoin.TransactionFIL.value_in_atto"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string input = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_input()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->input().data(), static_cast<int>(this->input().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "JUB.Proto.Filecoin.TransactionFIL.input"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JUB.Proto.Filecoin.TransactionFIL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JUB.Proto.Filecoin.TransactionFIL)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransactionFIL::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JUB.Proto.Filecoin.TransactionFIL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .JUB.Proto.Common.Bip44Path path = 1;
  if (this->has_path()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::path(this), output);
  }

  // uint32 nonce = 2;
  if (this->nonce() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->nonce(), output);
  }

  // uint32 gas_limit = 3;
  if (this->gas_limit() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(3, this->gas_limit(), output);
  }

  // string gas_fee_cap_in_atto = 4;
  if (this->gas_fee_cap_in_atto().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->gas_fee_cap_in_atto().data(), static_cast<int>(this->gas_fee_cap_in_atto().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Filecoin.TransactionFIL.gas_fee_cap_in_atto");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->gas_fee_cap_in_atto(), output);
  }

  // string gas_premium_in_atto = 5;
  if (this->gas_premium_in_atto().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->gas_premium_in_atto().data(), static_cast<int>(this->gas_premium_in_atto().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Filecoin.TransactionFIL.gas_premium_in_atto");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->gas_premium_in_atto(), output);
  }

  // string to = 6;
  if (this->to().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Filecoin.TransactionFIL.to");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->to(), output);
  }

  // string value_in_atto = 7;
  if (this->value_in_atto().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->value_in_atto().data(), static_cast<int>(this->value_in_atto().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Filecoin.TransactionFIL.value_in_atto");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->value_in_atto(), output);
  }

  // string input = 8;
  if (this->input().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->input().data(), static_cast<int>(this->input().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Filecoin.TransactionFIL.input");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->input(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JUB.Proto.Filecoin.TransactionFIL)
}

::PROTOBUF_NAMESPACE_ID::uint8* TransactionFIL::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:JUB.Proto.Filecoin.TransactionFIL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .JUB.Proto.Common.Bip44Path path = 1;
  if (this->has_path()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::path(this), target);
  }

  // uint32 nonce = 2;
  if (this->nonce() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->nonce(), target);
  }

  // uint32 gas_limit = 3;
  if (this->gas_limit() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->gas_limit(), target);
  }

  // string gas_fee_cap_in_atto = 4;
  if (this->gas_fee_cap_in_atto().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->gas_fee_cap_in_atto().data(), static_cast<int>(this->gas_fee_cap_in_atto().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Filecoin.TransactionFIL.gas_fee_cap_in_atto");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->gas_fee_cap_in_atto(), target);
  }

  // string gas_premium_in_atto = 5;
  if (this->gas_premium_in_atto().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->gas_premium_in_atto().data(), static_cast<int>(this->gas_premium_in_atto().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Filecoin.TransactionFIL.gas_premium_in_atto");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->gas_premium_in_atto(), target);
  }

  // string to = 6;
  if (this->to().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Filecoin.TransactionFIL.to");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        6, this->to(), target);
  }

  // string value_in_atto = 7;
  if (this->value_in_atto().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->value_in_atto().data(), static_cast<int>(this->value_in_atto().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Filecoin.TransactionFIL.value_in_atto");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        7, this->value_in_atto(), target);
  }

  // string input = 8;
  if (this->input().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->input().data(), static_cast<int>(this->input().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "JUB.Proto.Filecoin.TransactionFIL.input");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        8, this->input(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JUB.Proto.Filecoin.TransactionFIL)
  return target;
}

size_t TransactionFIL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JUB.Proto.Filecoin.TransactionFIL)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string gas_fee_cap_in_atto = 4;
  if (this->gas_fee_cap_in_atto().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->gas_fee_cap_in_atto());
  }

  // string gas_premium_in_atto = 5;
  if (this->gas_premium_in_atto().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->gas_premium_in_atto());
  }

  // string to = 6;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string value_in_atto = 7;
  if (this->value_in_atto().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->value_in_atto());
  }

  // string input = 8;
  if (this->input().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->input());
  }

  // .JUB.Proto.Common.Bip44Path path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // uint32 nonce = 2;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->nonce());
  }

  // uint32 gas_limit = 3;
  if (this->gas_limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->gas_limit());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionFIL::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JUB.Proto.Filecoin.TransactionFIL)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionFIL* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransactionFIL>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JUB.Proto.Filecoin.TransactionFIL)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JUB.Proto.Filecoin.TransactionFIL)
    MergeFrom(*source);
  }
}

void TransactionFIL::MergeFrom(const TransactionFIL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JUB.Proto.Filecoin.TransactionFIL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gas_fee_cap_in_atto().size() > 0) {

    gas_fee_cap_in_atto_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.gas_fee_cap_in_atto_);
  }
  if (from.gas_premium_in_atto().size() > 0) {

    gas_premium_in_atto_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.gas_premium_in_atto_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.value_in_atto().size() > 0) {

    value_in_atto_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_in_atto_);
  }
  if (from.input().size() > 0) {

    input_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  if (from.has_path()) {
    mutable_path()->::JUB::Proto::Common::Bip44Path::MergeFrom(from.path());
  }
  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
  if (from.gas_limit() != 0) {
    set_gas_limit(from.gas_limit());
  }
}

void TransactionFIL::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JUB.Proto.Filecoin.TransactionFIL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionFIL::CopyFrom(const TransactionFIL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JUB.Proto.Filecoin.TransactionFIL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionFIL::IsInitialized() const {
  return true;
}

void TransactionFIL::InternalSwap(TransactionFIL* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  gas_fee_cap_in_atto_.Swap(&other->gas_fee_cap_in_atto_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gas_premium_in_atto_.Swap(&other->gas_premium_in_atto_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_in_atto_.Swap(&other->value_in_atto_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  input_.Swap(&other->input_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(path_, other->path_);
  swap(nonce_, other->nonce_);
  swap(gas_limit_, other->gas_limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionFIL::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Filecoin
}  // namespace Proto
}  // namespace JUB
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::JUB::Proto::Filecoin::ContextCfgFIL* Arena::CreateMaybeMessage< ::JUB::Proto::Filecoin::ContextCfgFIL >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::Filecoin::ContextCfgFIL >(arena);
}
template<> PROTOBUF_NOINLINE ::JUB::Proto::Filecoin::TransactionFIL* Arena::CreateMaybeMessage< ::JUB::Proto::Filecoin::TransactionFIL >(Arena* arena) {
  return Arena::CreateInternal< ::JUB::Proto::Filecoin::TransactionFIL >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
